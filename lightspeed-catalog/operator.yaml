---
defaultChannel: preview
name: lightspeed-operator
schema: olm.package
---
image: quay.io/openshift/lightspeed-operator-bundle:v0.0.1
name: lightspeed-operator.v0.0.1
package: lightspeed-operator
properties:
- type: olm.gvk
  value:
    group: ols.openshift.io
    kind: OLSConfig
    version: v1alpha1
- type: olm.package
  value:
    packageName: lightspeed-operator
    version: 0.0.1
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Im1ldHJpY3MiLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3MtbW9uaXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZW1vbml0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3MtbW9uaXRvciJ9LCJzcGVjIjp7ImVuZHBvaW50cyI6W3siYmVhcmVyVG9rZW5GaWxlIjoiL3Zhci9ydW4vc2VjcmV0cy9rdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3Rva2VuIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJjZXJ0RmlsZSI6Ii9ldGMvcHJvbWV0aGV1cy9zZWNyZXRzL21ldHJpY3MtY2xpZW50LWNlcnRzL3Rscy5jcnQiLCJpbnNlY3VyZVNraXBWZXJpZnkiOmZhbHNlLCJrZXlGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL3NlY3JldHMvbWV0cmljcy1jbGllbnQtY2VydHMvdGxzLmtleSIsInNlcnZlck5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2Uub3BlbnNoaWZ0LWxpZ2h0c3BlZWQuc3ZjIn19XSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Imt1YmUtcmJhYy1wcm94eSIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJsaWdodHNwZWVkLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJjb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJzZXJ2aWNlIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImxpZ2h0c3BlZWQtb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlci1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6Im1ldHJpY3MtcmVhZGVyIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjbHVzdGVycm9sZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoibWV0cmljcyIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjbHVzdGVycm9sZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLW9scy1tZXRyaWNzLXJlYWRlciJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9vbHMtbWV0cmljcy1hY2Nlc3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Im1ldHJpY3MiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY2x1c3RlcnJvbGViaW5kaW5nIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImxpZ2h0c3BlZWQtb3BlcmF0b3IifSwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3Itb2xzLW1ldHJpY3MtcmVhZGVyIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3Itb2xzLW1ldHJpY3MtcmVhZGVyIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoicHJvbWV0aGV1cy1rOHMiLCJuYW1lc3BhY2UiOiJvcGVuc2hpZnQtbW9uaXRvcmluZyJ9XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJtZXRyaWNzIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InJvbGUiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibGlnaHRzcGVlZC1vcGVyYXRvciJ9LCJuYW1lIjoibGlnaHRzcGVlZC1vcGVyYXRvci1wcm9tZXRoZXVzLWs4cyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJlbmRwb2ludHMiLCJwb2RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJleHRlbnNpb25zIl0sInJlc291cmNlcyI6WyJpbmdyZXNzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm5ldHdvcmtpbmcuazhzLmlvIl0sInJlc291cmNlcyI6WyJpbmdyZXNzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoibWV0cmljcyIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJyb2xlYmluZGluZyIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLXByb21ldGhldXMtazhzIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoibGlnaHRzcGVlZC1vcGVyYXRvci1wcm9tZXRoZXVzLWs4cyJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoidXNlci1hY2Nlc3MiLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoicXVlcnktYWNjZXNzIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjbHVzdGVycm9sZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLXF1ZXJ5LWFjY2VzcyJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9vbHMtYWNjZXNzIl0sInZlcmJzIjpbImdldCJdfV19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/openshift/lightspeed-operator-bundle:v0.0.1
  name: ""
- image: quay.io/openshift/lightspeed-operator:latest
  name: ""
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:latest
  name: ""
schema: olm.bundle
---
schema: olm.channel
package: lightspeed-operator
name: preview
entries:
  - name: lightspeed-operator.v0.0.1
