---
defaultChannel: stable
icon:
  base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIGlkPSJ1dWlkLTQ2NzAxNDY4LTY2NDEtNDhjYi05ODdhLWFkOGFhYWE0Y2M1NyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMzggMzgiPjxkZWZzPjxzdHlsZT4udXVpZC0wNWM4ZjUzZC0zOTZhLTRhNzctYjYxMC00Y2FlMTYwN2IzN2Z7ZmlsbDojZTAwO30udXVpZC0wNThiNjM1ZC1iNjFjLTQ2ZjQtOTgyYS1hOTFkNmEyMjYzZWJ7ZmlsbDojZmZmO30udXVpZC0wMTY4MTg4Yy1kMGE2LTQ5NmUtYTJkOC01Y2Q2ZWUzMGRjYjJ7ZmlsbDojZTBlMGUwO308L3N0eWxlPjwvZGVmcz48cGF0aCBjbGFzcz0idXVpZC0wNThiNjM1ZC1iNjFjLTQ2ZjQtOTgyYS1hOTFkNmEyMjYzZWIiIGQ9Im0yOCwxSDEwQzUuMDI5NDQsMSwxLDUuMDI5NDQsMSwxMHYxOGMwLDQuOTcwNTcsNC4wMjk0NCw5LDksOWgxOGM0Ljk3MDU2LDAsOS00LjAyOTQzLDktOVYxMGMwLTQuOTcwNTYtNC4wMjk0NC05LTktOWgwWiIvPjxwYXRoIGNsYXNzPSJ1dWlkLTAxNjgxODhjLWQwYTYtNDk2ZS1hMmQ4LTVjZDZlZTMwZGNiMiIgZD0ibTI4LDIuMjVjNC4yNzMzMiwwLDcuNzUsMy40NzY2NCw3Ljc1LDcuNzV2MThjMCw0LjI3MzM2LTMuNDc2NjgsNy43NS03Ljc1LDcuNzVIMTBjLTQuMjczMzIsMC03Ljc1LTMuNDc2NjQtNy43NS03Ljc1VjEwYzAtNC4yNzMzNiwzLjQ3NjY4LTcuNzUsNy43NS03Ljc1aDE4bTAtMS4yNUgxMEM1LjAyOTQyLDEsMSw1LjAyOTQ0LDEsMTB2MThjMCw0Ljk3MDU3LDQuMDI5NDIsOSw5LDloMThjNC45NzA1OCwwLDktNC4wMjk0Myw5LTlWMTBjMC00Ljk3MDU2LTQuMDI5NDItOS05LTloMFoiLz48cGF0aCBjbGFzcz0idXVpZC0wNWM4ZjUzZC0zOTZhLTRhNzctYjYxMC00Y2FlMTYwN2IzN2YiIGQ9Im0yMCwxNS42MjVjLS4zNDQ3MywwLS42MjUtLjI4MDI3LS42MjUtLjYyNXYtN2MwLS4zNDQ3My4yODAyNy0uNjI1LjYyNS0uNjI1cy42MjUuMjgwMjcuNjI1LjYyNXY3YzAsLjM0NDczLS4yODAyNy42MjUtLjYyNS42MjVaIi8+PHBhdGggY2xhc3M9InV1aWQtMDVjOGY1M2QtMzk2YS00YTc3LWI2MTAtNGNhZTE2MDdiMzdmIiBkPSJtMTYsMTkuNjI1aC03Yy0uMzQ0NzMsMC0uNjI1LS4yODAyNy0uNjI1LS42MjVzLjI4MDI3LS42MjUuNjI1LS42MjVoN2MuMzQ0NzMsMCwuNjI1LjI4MDI3LjYyNS42MjVzLS4yODAyNy42MjUtLjYyNS42MjVaIi8+PHBhdGggY2xhc3M9InV1aWQtMDVjOGY1M2QtMzk2YS00YTc3LWI2MTAtNGNhZTE2MDdiMzdmIiBkPSJtMjAsMzAuNjI1Yy0uMzQ0NzMsMC0uNjI1LS4yODAyNy0uNjI1LS42MjV2LTdjMC0uMzQ0NzMuMjgwMjctLjYyNS42MjUtLjYyNXMuNjI1LjI4MDI3LjYyNS42MjV2N2MwLC4zNDQ3My0uMjgwMjcuNjI1LS42MjUuNjI1WiIvPjxwYXRoIGQ9Im0zMC41NzY1NCwxOS4yMzk0NGMuMDI3OTUtLjA2NzY5LjAzOTU1LS4xMzk0Ny4wNDI4NS0uMjExNDkuMDAwNDktLjAwOTgzLjAwNTYyLS4wMTgwNy4wMDU2Mi0uMDI3OTVzLS4wMDUxMy0uMDE4MTMtLjAwNTYyLS4wMjc5NWMtLjAwMzMtLjA3MjAyLS4wMTQ4OS0uMTQzOC0uMDQyODUtLjIxMTQ5LS4wMjAwMi0uMDQ3OTEtLjA1MzgzLS4wODY2Ny0uMDg0NDctLjEyNzc1LS4wMTgwNy0uMDI0NDgtLjAyNzU5LS4wNTMwNC0uMDQ5NjgtLjA3NTJsLTItMmMtLjI0NDE0LS4yNDQxNC0uNjQwNjItLjI0NDE0LS44ODQ3NywwLS4yNDMxNi4yNDQxNC0uMjQzMTYuNjQwNjIsMCwuODg0NzdsLjkzMzIzLjkzMjYyaC05LjQ5MDg0Yy0uMzQ0NzMsMC0uNjI1LjI4MDI3LS42MjUuNjI1cy4yODAyNy42MjUuNjI1LjYyNWg5LjQ5MDg0bC0uOTMzMjMuOTMyNjJjLS4yNDMxNi4yNDQxNC0uMjQzMTYuNjQwNjIsMCwuODg0NzcuMTIyMDcuMTIyMDcuMjgyMjMuMTgyNjIuNDQyMzguMTgyNjJzLjMyMDMxLS4wNjA1NS40NDIzOC0uMTgyNjJsMi0yYy4wMjIwOS0uMDIyMTYuMDMxNjItLjA1MDcyLjA0OTY4LS4wNzUyLjAzMDY0LS4wNDEwOC4wNjQ0NS0uMDc5ODMuMDg0NDctLjEyNzc1WiIvPjxwYXRoIGQ9Im0xNywxNi42MjVjLS4xNjAxNiwwLS4zMjAzMS0uMDYwNTUtLjQ0MjM4LS4xODI2MmwtNC00Yy0uMjQzMTYtLjI0NDE0LS4yNDMxNi0uNjQwNjIsMC0uODg0NzcuMjQ0MTQtLjI0NDE0LjY0MDYyLS4yNDQxNC44ODQ3NywwbDQsNGMuMjQzMTYuMjQ0MTQuMjQzMTYuNjQwNjIsMCwuODg0NzctLjEyMjA3LjEyMjA3LS4yODIyMy4xODI2Mi0uNDQyMzguMTgyNjJaIi8+PHBhdGggZD0ibTEzLDI2LjYyNWMtLjE2MDE2LDAtLjMyMDMxLS4wNjA1NS0uNDQyMzgtLjE4MjYyLS4yNDMxNi0uMjQ0MTQtLjI0MzE2LS42NDA2MiwwLS44ODQ3N2w0LTRjLjI0NDE0LS4yNDQxNC42NDA2Mi0uMjQ0MTQuODg0NzcsMCwuMjQzMTYuMjQ0MTQuMjQzMTYuNjQwNjIsMCwuODg0NzdsLTQsNGMtLjEyMjA3LjEyMjA3LS4yODIyMy4xODI2Mi0uNDQyMzguMTgyNjJaIi8+PHBhdGggY2xhc3M9InV1aWQtMDVjOGY1M2QtMzk2YS00YTc3LWI2MTAtNGNhZTE2MDdiMzdmIiBkPSJtMTcuNDIzODMsMTMuNjI1Yy0uMjg4MDksMC0uNTQ3ODUtLjIwMTE3LS42MTAzNS0uNDk1MTJsLS40MjQ4LTJjLS4wNzEyOS0uMzM3ODkuMTQzNTUtLjY2OTkyLjQ4MTQ1LS43NDEyMS4zMzg4Ny0uMDc1Mi42Njk5Mi4xNDM1NS43NDEyMS40ODE0NWwuNDI0OCwyYy4wNzEyOS4zMzc4OS0uMTQzNTUuNjY5OTItLjQ4MTQ1Ljc0MTIxLS4wNDM5NS4wMDk3Ny0uMDg3ODkuMDEzNjctLjEzMDg2LjAxMzY3WiIvPjxwYXRoIGNsYXNzPSJ1dWlkLTA1YzhmNTNkLTM5NmEtNGE3Ny1iNjEwLTRjYWUxNjA3YjM3ZiIgZD0ibTE0LjAwMDk4LDE3LjA0OThjLS4wNDI5NywwLS4wODY5MS0uMDAzOTEtLjEzMDg2LS4wMTM2N2wtMi0uNDI0OGMtLjMzNzg5LS4wNzEyOS0uNTUyNzMtLjQwMzMyLS40ODE0NS0uNzQxMjEuMDcyMjctLjMzNzg5LjQwMjM0LS41NTg1OS43NDEyMS0uNDgxNDVsMiwuNDI0OGMuMzM3ODkuMDcxMjkuNTUyNzMuNDAzMzIuNDgxNDUuNzQxMjEtLjA2MjUuMjkzOTUtLjMyMjI3LjQ5NTEyLS42MTAzNS40OTUxMloiLz48cGF0aCBjbGFzcz0idXVpZC0wNWM4ZjUzZC0zOTZhLTRhNzctYjYxMC00Y2FlMTYwN2IzN2YiIGQ9Im0xNy4wMDA5OCwyNy42MjVjLS4wNDI5NywwLS4wODY5MS0uMDAzOTEtLjEzMDg2LS4wMTM2Ny0uMzM3ODktLjA3MTI5LS41NTI3My0uNDAzMzItLjQ4MTQ1LS43NDEyMWwuNDI0OC0yYy4wNzIyNy0uMzM3ODkuNDAxMzctLjU1NTY2Ljc0MTIxLS40ODE0NS4zMzc4OS4wNzEyOS41NTI3My40MDMzMi40ODE0NS43NDEyMWwtLjQyNDgsMmMtLjA2MjUuMjkzOTUtLjMyMjI3LjQ5NTEyLS42MTAzNS40OTUxMloiLz48cGF0aCBjbGFzcz0idXVpZC0wNWM4ZjUzZC0zOTZhLTRhNzctYjYxMC00Y2FlMTYwN2IzN2YiIGQ9Im0xMS45OTkwMiwyMi42MjVjLS4yODgwOSwwLS41NDc4NS0uMjAxMTctLjYxMDM1LS40OTUxMi0uMDcxMjktLjMzNzg5LjE0MzU1LS42Njk5Mi40ODE0NS0uNzQxMjFsMi0uNDI0OGMuMzQwODItLjA3NjE3LjY2OTkyLjE0MzU1Ljc0MTIxLjQ4MTQ1cy0uMTQzNTUuNjY5OTItLjQ4MTQ1Ljc0MTIxbC0yLC40MjQ4Yy0uMDQzOTUuMDA5NzctLjA4Nzg5LjAxMzY3LS4xMzA4Ni4wMTM2N1oiLz48cGF0aCBkPSJtOSwxNS42Mjk4OGMtLjE2MDE2LDAtLjMyMDMxLS4wNzAzMS0uNDQwNDMtLjE5MDQzLS4wNTk1Ny0uMDU5NTctLjA5OTYxLS4xMjAxMi0uMTM5NjUtLjE5OTIyLS4wMzAyNy0uMDgwMDgtLjA0OTgtLjE2MDE2LS4wNDk4LS4yNDAyMywwLS4xNjAxNi4wNjkzNC0uMzIwMzEuMTg5NDUtLjQ0MDQzLjIzMDQ3LS4yMjk0OS42NTAzOS0uMjQwMjMuODc5ODgsMCwuMTIwMTIuMTIwMTIuMTkwNDMuMjgwMjcuMTkwNDMuNDQwNDMsMCwuMDgwMDgtLjAyMDUxLjE2MDE2LS4wNDk4LjI0MDIzLS4wMzAyNy4wNzkxLS4wODAwOC4xMzk2NS0uMTQwNjIuMTk5MjItLjEyMDEyLjEyMDEyLS4yNzkzLjE5MDQzLS40Mzk0NS4xOTA0M1oiLz48cGF0aCBkPSJtOSwyMy42Mjk4OGMtLjE2MDE2LDAtLjMyMDMxLS4wNzAzMS0uNDQwNDMtLjE5MDQzLS4xMjAxMi0uMTA5MzgtLjE4OTQ1LS4yNzkzLS4xODk0NS0uNDM5NDVzLjA2OTM0LS4zMjAzMS4xODk0NS0uNDQwNDNjLjIzMDQ3LS4yMjk0OS42NDA2Mi0uMjQwMjMuODc5ODgsMCwuMTIwMTIuMTIwMTIuMTkwNDMuMjgwMjcuMTkwNDMuNDQwNDNzLS4wNzAzMS4zMzAwOC0uMTkwNDMuNDM5NDVjLS4xMjAxMi4xMjAxMi0uMjc5My4xOTA0My0uNDM5NDUuMTkwNDNaIi8+PC9zdmc+
  mediatype: image/svg+xml
name: lightspeed-operator
schema: olm.package
---
image: registry.redhat.io/openshift-lightspeed/lightspeed-operator-bundle@sha256:ad10cdce09322f5a2da43fb1b45d7952808b822a744c9c5a47f42ddd95fe9916
name: lightspeed-operator.v1.0.0
package: lightspeed-operator
properties:
  - type: olm.gvk
    value:
      group: ols.openshift.io
      kind: OLSConfig
      version: v1alpha1
  - type: olm.package
    value:
      packageName: lightspeed-operator
      version: 1.0.0
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjUifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJvbHNjb25maWdzLm9scy5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6Im9scy5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiT0xTQ29uZmlnIiwibGlzdEtpbmQiOiJPTFNDb25maWdMaXN0IiwicGx1cmFsIjoib2xzY29uZmlncyIsInNpbmd1bGFyIjoib2xzY29uZmlnIn0sInNjb3BlIjoiQ2x1c3RlciIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiUmVkIEhhdCBPcGVuU2hpZnQgTGlnaHRzcGVlZCBpbnN0YW5jZS4gT0xTQ29uZmlnIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBvbHNjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik9MU0NvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBPTFNDb25maWciLCJwcm9wZXJ0aWVzIjp7ImxsbSI6eyJkZXNjcmlwdGlvbiI6IkxMTVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiB0aGUgbGFyZ2UgbGFuZ3VhZ2UgbW9kZWwgKExMTSkuIiwicHJvcGVydGllcyI6eyJwcm92aWRlcnMiOnsiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJQcm92aWRlclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBMTE0gcHJvdmlkZXIuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJIFZlcnNpb24gZm9yIEF6dXJlIE9wZW5BSSBwcm92aWRlciIsInR5cGUiOiJzdHJpbmcifSwiY3JlZGVudGlhbHNTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgc2VjcmV0IG9iamVjdCB0aGF0IHN0b3JlcyBBUEkgcHJvdmlkZXIgY3JlZGVudGlhbHMiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5UaGlzIGZpZWxkIGlzIGVmZmVjdGl2ZWx5IHJlcXVpcmVkLCBidXQgZHVlIHRvIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGlzXG5hbGxvd2VkIHRvIGJlIGVtcHR5LiBJbnN0YW5jZXMgb2YgdGhpcyB0eXBlIHdpdGggYW4gZW1wdHkgdmFsdWUgaGVyZSBhcmVcbmFsbW9zdCBjZXJ0YWlubHkgd3JvbmcuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwiZGVwbG95bWVudE5hbWUiOnsiZGVzY3JpcHRpb24iOiJBenVyZSBPcGVuQUkgZGVwbG95bWVudCBuYW1lIiwidHlwZSI6InN0cmluZyJ9LCJtb2RlbHMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIG1vZGVscyBmcm9tIHRoZSBwcm92aWRlciIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTW9kZWxTcGVjIGRlZmluZXMgdGhlIExMTSBtb2RlbCB0byB1c2UgYW5kIGl0cyBwYXJhbWV0ZXJzLiIsInByb3BlcnRpZXMiOnsiY29udGV4dFdpbmRvd1NpemUiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBtb2RlbCdzIGNvbnRleHQgd2luZG93IHNpemUuIERlZmF1bHQgaXMgc3BlY2lmaWMgdG8gcHJvdmlkZXIvbW9kZWwuIiwibWluaW11bSI6MTAyNCwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik1vZGVsIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn0sInBhcmFtZXRlcnMiOnsiZGVzY3JpcHRpb24iOiJNb2RlbCBBUEkgcGFyYW1ldGVycyIsInByb3BlcnRpZXMiOnsibWF4VG9rZW5zRm9yUmVzcG9uc2UiOnsiZGVzY3JpcHRpb24iOiJNYXggdG9rZW5zIGZvciByZXNwb25zZSIsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sInVybCI6eyJkZXNjcmlwdGlvbiI6Ik1vZGVsIEFQSSBVUkwiLCJwYXR0ZXJuIjoiXmh0dHBzPzovLy4qJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlByb3ZpZGVyIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn0sInByb2plY3RJRCI6eyJkZXNjcmlwdGlvbiI6IldhdHNvbnggUHJvamVjdCBJRCIsInR5cGUiOiJzdHJpbmcifSwidGxzU2VjdXJpdHlQcm9maWxlIjp7ImRlc2NyaXB0aW9uIjoiVExTIFNlY3VyaXR5IFByb2ZpbGUgdXNlZCBieSBjb25uZWN0aW9uIHRvIHByb3ZpZGVyIiwicHJvcGVydGllcyI6eyJjdXN0b20iOnsiZGVzY3JpcHRpb24iOiJjdXN0b20gaXMgYSB1c2VyLWRlZmluZWQgVExTIHNlY3VyaXR5IHByb2ZpbGUuIEJlIGV4dHJlbWVseSBjYXJlZnVsIHVzaW5nIGEgY3VzdG9tXG5wcm9maWxlIGFzIGludmFsaWQgY29uZmlndXJhdGlvbnMgY2FuIGJlIGNhdGFzdHJvcGhpYy4gQW4gZXhhbXBsZSBjdXN0b20gcHJvZmlsZVxubG9va3MgbGlrZSB0aGlzOlxuXG4gIGNpcGhlcnM6XG5cbiAgICAtIEVDREhFLUVDRFNBLUNIQUNIQTIwLVBPTFkxMzA1XG5cbiAgICAtIEVDREhFLVJTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICBtaW5UTFNWZXJzaW9uOiBWZXJzaW9uVExTMTEiLCJudWxsYWJsZSI6dHJ1ZSwicHJvcGVydGllcyI6eyJjaXBoZXJzIjp7ImRlc2NyaXB0aW9uIjoiY2lwaGVycyBpcyB1c2VkIHRvIHNwZWNpZnkgdGhlIGNpcGhlciBhbGdvcml0aG1zIHRoYXQgYXJlIG5lZ290aWF0ZWRcbmR1cmluZyB0aGUgVExTIGhhbmRzaGFrZS4gIE9wZXJhdG9ycyBtYXkgcmVtb3ZlIGVudHJpZXMgdGhlaXIgb3BlcmFuZHNcbmRvIG5vdCBzdXBwb3J0LiAgRm9yIGV4YW1wbGUsIHRvIHVzZSBERVMtQ0JDMy1TSEEgICh5YW1sKTpcblxuICBjaXBoZXJzOlxuICAgIC0gREVTLUNCQzMtU0hBIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWluVExTVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6Im1pblRMU1ZlcnNpb24gaXMgdXNlZCB0byBzcGVjaWZ5IHRoZSBtaW5pbWFsIHZlcnNpb24gb2YgdGhlIFRMUyBwcm90b2NvbFxudGhhdCBpcyBuZWdvdGlhdGVkIGR1cmluZyB0aGUgVExTIGhhbmRzaGFrZS4gRm9yIGV4YW1wbGUsIHRvIHVzZSBUTFNcbnZlcnNpb25zIDEuMSwgMS4yIGFuZCAxLjMgKHlhbWwpOlxuXG4gIG1pblRMU1ZlcnNpb246IFZlcnNpb25UTFMxMVxuXG5OT1RFOiBjdXJyZW50bHkgdGhlIGhpZ2hlc3QgbWluVExTVmVyc2lvbiBhbGxvd2VkIGlzIFZlcnNpb25UTFMxMiIsImVudW0iOlsiVmVyc2lvblRMUzEwIiwiVmVyc2lvblRMUzExIiwiVmVyc2lvblRMUzEyIiwiVmVyc2lvblRMUzEzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiaW50ZXJtZWRpYXRlIjp7ImRlc2NyaXB0aW9uIjoiaW50ZXJtZWRpYXRlIGlzIGEgVExTIHNlY3VyaXR5IHByb2ZpbGUgYmFzZWQgb246XG5cbmh0dHBzOi8vd2lraS5tb3ppbGxhLm9yZy9TZWN1cml0eS9TZXJ2ZXJfU2lkZV9UTFMjSW50ZXJtZWRpYXRlX2NvbXBhdGliaWxpdHlfLjI4cmVjb21tZW5kZWQuMjlcblxuYW5kIGxvb2tzIGxpa2UgdGhpcyAoeWFtbCk6XG5cbiAgY2lwaGVyczpcblxuICAgIC0gVExTX0FFU18xMjhfR0NNX1NIQTI1NlxuXG4gICAgLSBUTFNfQUVTXzI1Nl9HQ01fU0hBMzg0XG5cbiAgICAtIFRMU19DSEFDSEEyMF9QT0xZMTMwNV9TSEEyNTZcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gRUNESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIEVDREhFLVJTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBFQ0RIRS1SU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBESEUtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgbWluVExTVmVyc2lvbjogVmVyc2lvblRMUzEyIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJvYmplY3QifSwibW9kZXJuIjp7ImRlc2NyaXB0aW9uIjoibW9kZXJuIGlzIGEgVExTIHNlY3VyaXR5IHByb2ZpbGUgYmFzZWQgb246XG5cbmh0dHBzOi8vd2lraS5tb3ppbGxhLm9yZy9TZWN1cml0eS9TZXJ2ZXJfU2lkZV9UTFMjTW9kZXJuX2NvbXBhdGliaWxpdHlcblxuYW5kIGxvb2tzIGxpa2UgdGhpcyAoeWFtbCk6XG5cbiAgY2lwaGVyczpcblxuICAgIC0gVExTX0FFU18xMjhfR0NNX1NIQTI1NlxuXG4gICAgLSBUTFNfQUVTXzI1Nl9HQ01fU0hBMzg0XG5cbiAgICAtIFRMU19DSEFDSEEyMF9QT0xZMTMwNV9TSEEyNTZcblxuICBtaW5UTFNWZXJzaW9uOiBWZXJzaW9uVExTMTMiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCJ9LCJvbGQiOnsiZGVzY3JpcHRpb24iOiJvbGQgaXMgYSBUTFMgc2VjdXJpdHkgcHJvZmlsZSBiYXNlZCBvbjpcblxuaHR0cHM6Ly93aWtpLm1vemlsbGEub3JnL1NlY3VyaXR5L1NlcnZlcl9TaWRlX1RMUyNPbGRfYmFja3dhcmRfY29tcGF0aWJpbGl0eVxuXG5hbmQgbG9va3MgbGlrZSB0aGlzICh5YW1sKTpcblxuICBjaXBoZXJzOlxuXG4gICAgLSBUTFNfQUVTXzEyOF9HQ01fU0hBMjU2XG5cbiAgICAtIFRMU19BRVNfMjU2X0dDTV9TSEEzODRcblxuICAgIC0gVExTX0NIQUNIQTIwX1BPTFkxMzA1X1NIQTI1NlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMjU2LUdDTS1TSEEzODRcblxuICAgIC0gRUNESEUtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIEVDREhFLUVDRFNBLUNIQUNIQTIwLVBPTFkxMzA1XG5cbiAgICAtIEVDREhFLVJTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIERIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODRcblxuICAgIC0gREhFLVJTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMxMjgtU0hBMjU2XG5cbiAgICAtIEVDREhFLVJTQS1BRVMxMjgtU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzEyOC1TSEFcblxuICAgIC0gRUNESEUtUlNBLUFFUzEyOC1TSEFcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMjU2LVNIQTM4NFxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMjU2LVNIQTM4NFxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMyNTYtU0hBXG5cbiAgICAtIEVDREhFLVJTQS1BRVMyNTYtU0hBXG5cbiAgICAtIERIRS1SU0EtQUVTMTI4LVNIQTI1NlxuXG4gICAgLSBESEUtUlNBLUFFUzI1Ni1TSEEyNTZcblxuICAgIC0gQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gQUVTMjU2LUdDTS1TSEEzODRcblxuICAgIC0gQUVTMTI4LVNIQTI1NlxuXG4gICAgLSBBRVMyNTYtU0hBMjU2XG5cbiAgICAtIEFFUzEyOC1TSEFcblxuICAgIC0gQUVTMjU2LVNIQVxuXG4gICAgLSBERVMtQ0JDMy1TSEFcblxuICBtaW5UTFNWZXJzaW9uOiBWZXJzaW9uVExTMTAiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBpcyBvbmUgb2YgT2xkLCBJbnRlcm1lZGlhdGUsIE1vZGVybiBvciBDdXN0b20uIEN1c3RvbSBwcm92aWRlc1xudGhlIGFiaWxpdHkgdG8gc3BlY2lmeSBpbmRpdmlkdWFsIFRMUyBzZWN1cml0eSBwcm9maWxlIHBhcmFtZXRlcnMuXG5PbGQsIEludGVybWVkaWF0ZSBhbmQgTW9kZXJuIGFyZSBUTFMgc2VjdXJpdHkgcHJvZmlsZXMgYmFzZWQgb246XG5cbmh0dHBzOi8vd2lraS5tb3ppbGxhLm9yZy9TZWN1cml0eS9TZXJ2ZXJfU2lkZV9UTFMjUmVjb21tZW5kZWRfY29uZmlndXJhdGlvbnNcblxuVGhlIHByb2ZpbGVzIGFyZSBpbnRlbnQgYmFzZWQsIHNvIHRoZXkgbWF5IGNoYW5nZSBvdmVyIHRpbWUgYXMgbmV3IGNpcGhlcnMgYXJlIGRldmVsb3BlZCBhbmQgZXhpc3RpbmcgY2lwaGVyc1xuYXJlIGZvdW5kIHRvIGJlIGluc2VjdXJlLiAgRGVwZW5kaW5nIG9uIHByZWNpc2VseSB3aGljaCBjaXBoZXJzIGFyZSBhdmFpbGFibGUgdG8gYSBwcm9jZXNzLCB0aGUgbGlzdCBtYXkgYmVcbnJlZHVjZWQuXG5cbk5vdGUgdGhhdCB0aGUgTW9kZXJuIHByb2ZpbGUgaXMgY3VycmVudGx5IG5vdCBzdXBwb3J0ZWQgYmVjYXVzZSBpdCBpcyBub3RcbnlldCB3ZWxsIGFkb3B0ZWQgYnkgY29tbW9uIHNvZnR3YXJlIGxpYnJhcmllcy4iLCJlbnVtIjpbIk9sZCIsIkludGVybWVkaWF0ZSIsIk1vZGVybiIsIkN1c3RvbSJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJQcm92aWRlciB0eXBlIiwiZW51bSI6WyJhenVyZV9vcGVuYWkiLCJiYW0iLCJvcGVuYWkiLCJ3YXRzb254IiwicmhvYWlfdmxsbSIsInJoZWxhaV92bGxtIiwiZmFrZV9wcm92aWRlciJdLCJ0eXBlIjoic3RyaW5nIn0sInVybCI6eyJkZXNjcmlwdGlvbiI6IlByb3ZpZGVyIEFQSSBVUkwiLCJwYXR0ZXJuIjoiXmh0dHBzPzovLy4qJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNyZWRlbnRpYWxzU2VjcmV0UmVmIiwibW9kZWxzIiwibmFtZSIsInR5cGUiXSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy12YWxpZGF0aW9ucyI6W3sibWVzc2FnZSI6IidkZXBsb3ltZW50TmFtZScgbXVzdCBiZSBzcGVjaWZpZWQgZm9yICdhenVyZV9vcGVuYWknIHByb3ZpZGVyIiwicnVsZSI6InNlbGYudHlwZSAhPSBcImF6dXJlX29wZW5haVwiIHx8IHNlbGYuZGVwbG95bWVudE5hbWUgIT0gXCJcIiJ9LHsibWVzc2FnZSI6Iidwcm9qZWN0SUQnIG11c3QgYmUgc3BlY2lmaWVkIGZvciAnd2F0c29ueCcgcHJvdmlkZXIiLCJydWxlIjoic2VsZi50eXBlICE9IFwid2F0c29ueFwiIHx8IHNlbGYucHJvamVjdElEICE9IFwiXCIifV19LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInByb3ZpZGVycyJdLCJ0eXBlIjoib2JqZWN0In0sIm9scyI6eyJkZXNjcmlwdGlvbiI6Ik9MU1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBPTFMgZGVwbG95bWVudC4iLCJwcm9wZXJ0aWVzIjp7ImFkZGl0aW9uYWxDQUNvbmZpZ01hcFJlZiI6eyJkZXNjcmlwdGlvbiI6IkFkZGl0aW9uYWwgQ0EgY2VydGlmaWNhdGVzIGZvciBUTFMgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIE9MUyBzZXJ2aWNlIGFuZCBMTE0gUHJvdmlkZXIiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5UaGlzIGZpZWxkIGlzIGVmZmVjdGl2ZWx5IHJlcXVpcmVkLCBidXQgZHVlIHRvIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGlzXG5hbGxvd2VkIHRvIGJlIGVtcHR5LiBJbnN0YW5jZXMgb2YgdGhpcyB0eXBlIHdpdGggYW4gZW1wdHkgdmFsdWUgaGVyZSBhcmVcbmFsbW9zdCBjZXJ0YWlubHkgd3JvbmcuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwiY29udmVyc2F0aW9uQ2FjaGUiOnsiZGVzY3JpcHRpb24iOiJDb252ZXJzYXRpb24gY2FjaGUgc2V0dGluZ3MiLCJwcm9wZXJ0aWVzIjp7InBvc3RncmVzIjp7ImRlc2NyaXB0aW9uIjoiUG9zdGdyZXNTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUG9zdGdyZXMuIiwicHJvcGVydGllcyI6eyJjcmVkZW50aWFsc1NlY3JldCI6eyJkZWZhdWx0IjoibGlnaHRzcGVlZC1wb3N0Z3Jlcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IlNlY3JldCB0aGF0IGhvbGRzIHBvc3RncmVzIGNyZWRlbnRpYWxzIiwidHlwZSI6InN0cmluZyJ9LCJkYk5hbWUiOnsiZGVmYXVsdCI6InBvc3RncmVzIiwiZGVzY3JpcHRpb24iOiJQb3N0Z3JlcyBkYXRhYmFzZSBuYW1lIiwidHlwZSI6InN0cmluZyJ9LCJtYXhDb25uZWN0aW9ucyI6eyJkZWZhdWx0IjoyMDAwLCJkZXNjcmlwdGlvbiI6IlBvc3RncmVzIG1heGNvbm5lY3Rpb25zLiBEZWZhdWx0OiBcIjIwMDBcIiIsInR5cGUiOiJpbnRlZ2VyIn0sInNoYXJlZEJ1ZmZlcnMiOnsiZGVmYXVsdCI6IjI1Nk1CIiwiZGVzY3JpcHRpb24iOiJQb3N0Z3JlcyBzaGFyZWRidWZmZXJzIiwidHlwZSI6InN0cmluZyIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidXNlciI6eyJkZWZhdWx0IjoicG9zdGdyZXMiLCJkZXNjcmlwdGlvbiI6IlBvc3RncmVzIHVzZXIgbmFtZSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6eyJkZWZhdWx0IjoicG9zdGdyZXMiLCJkZXNjcmlwdGlvbiI6IkNvbnZlcnNhdGlvbiBjYWNoZSB0eXBlLiBEZWZhdWx0OiBcInBvc3RncmVzXCIiLCJlbnVtIjpbInBvc3RncmVzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiZGVmYXVsdE1vZGVsIjp7ImRlc2NyaXB0aW9uIjoiRGVmYXVsdCBtb2RlbCBmb3IgdXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0sImRlZmF1bHRQcm92aWRlciI6eyJkZXNjcmlwdGlvbiI6IkRlZmF1bHQgcHJvdmlkZXIgZm9yIHVzYWdlIiwidHlwZSI6InN0cmluZyJ9LCJkZXBsb3ltZW50Ijp7ImRlc2NyaXB0aW9uIjoiT0xTIGRlcGxveW1lbnQgc2V0dGluZ3MiLCJwcm9wZXJ0aWVzIjp7ImFwaSI6eyJkZXNjcmlwdGlvbiI6IkFQSSBjb250YWluZXIgc2V0dGluZ3MuIiwicHJvcGVydGllcyI6eyJub2RlU2VsZWN0b3IiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoib2JqZWN0In0sInJlc291cmNlcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlUmVxdWlyZW1lbnRzIGRlc2NyaWJlcyB0aGUgY29tcHV0ZSByZXNvdXJjZSByZXF1aXJlbWVudHMuIiwicHJvcGVydGllcyI6eyJjbGFpbXMiOnsiZGVzY3JpcHRpb24iOiJDbGFpbXMgbGlzdHMgdGhlIG5hbWVzIG9mIHJlc291cmNlcywgZGVmaW5lZCBpbiBzcGVjLnJlc291cmNlQ2xhaW1zLFxudGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci5cblxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgdGhlXG5EeW5hbWljUmVzb3VyY2VBbGxvY2F0aW9uIGZlYXR1cmUgZ2F0ZS5cblxuVGhpcyBmaWVsZCBpcyBpbW11dGFibGUuIEl0IGNhbiBvbmx5IGJlIHNldCBmb3IgY29udGFpbmVycy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlQ2xhaW0gcmVmZXJlbmNlcyBvbmUgZW50cnkgaW4gUG9kU3BlYy5SZXNvdXJjZUNsYWltcy4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgbWF0Y2ggdGhlIG5hbWUgb2Ygb25lIGVudHJ5IGluIHBvZC5zcGVjLnJlc291cmNlQ2xhaW1zIG9mXG50aGUgUG9kIHdoZXJlIHRoaXMgZmllbGQgaXMgdXNlZC4gSXQgbWFrZXMgdGhhdCByZXNvdXJjZSBhdmFpbGFibGVcbmluc2lkZSBhIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn0sInJlcXVlc3QiOnsiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGlzIHRoZSBuYW1lIGNob3NlbiBmb3IgYSByZXF1ZXN0IGluIHRoZSByZWZlcmVuY2VkIGNsYWltLlxuSWYgZW1wdHksIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgY2xhaW0gaXMgbWFkZSBhdmFpbGFibGUsIG90aGVyd2lzZVxub25seSB0aGUgcmVzdWx0IG9mIHRoaXMgcmVxdWVzdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtbWFwLWtleXMiOlsibmFtZSJdLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoibWFwIn0sImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuXG5JZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsXG5vdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidG9sZXJhdGlvbnMiOnsiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgcG9kIHRoaXMgVG9sZXJhdGlvbiBpcyBhdHRhY2hlZCB0byB0b2xlcmF0ZXMgYW55IHRhaW50IHRoYXQgbWF0Y2hlc1xudGhlIHRyaXBsZSBcdTAwM2NrZXksdmFsdWUsZWZmZWN0XHUwMDNlIHVzaW5nIHRoZSBtYXRjaGluZyBvcGVyYXRvciBcdTAwM2NvcGVyYXRvclx1MDAzZS4iLCJwcm9wZXJ0aWVzIjp7ImVmZmVjdCI6eyJkZXNjcmlwdGlvbiI6IkVmZmVjdCBpbmRpY2F0ZXMgdGhlIHRhaW50IGVmZmVjdCB0byBtYXRjaC4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGVmZmVjdHMuXG5XaGVuIHNwZWNpZmllZCwgYWxsb3dlZCB2YWx1ZXMgYXJlIE5vU2NoZWR1bGUsIFByZWZlck5vU2NoZWR1bGUgYW5kIE5vRXhlY3V0ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSBpcyB0aGUgdGFpbnQga2V5IHRoYXQgdGhlIHRvbGVyYXRpb24gYXBwbGllcyB0by4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGtleXMuXG5JZiB0aGUga2V5IGlzIGVtcHR5LCBvcGVyYXRvciBtdXN0IGJlIEV4aXN0czsgdGhpcyBjb21iaW5hdGlvbiBtZWFucyB0byBtYXRjaCBhbGwgdmFsdWVzIGFuZCBhbGwga2V5cy4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiT3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgdmFsdWUuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEV4aXN0cyBhbmQgRXF1YWwuIERlZmF1bHRzIHRvIEVxdWFsLlxuRXhpc3RzIGlzIGVxdWl2YWxlbnQgdG8gd2lsZGNhcmQgZm9yIHZhbHVlLCBzbyB0aGF0IGEgcG9kIGNhblxudG9sZXJhdGUgYWxsIHRhaW50cyBvZiBhIHBhcnRpY3VsYXIgY2F0ZWdvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9uU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25TZWNvbmRzIHJlcHJlc2VudHMgdGhlIHBlcmlvZCBvZiB0aW1lIHRoZSB0b2xlcmF0aW9uICh3aGljaCBtdXN0IGJlXG5vZiBlZmZlY3QgTm9FeGVjdXRlLCBvdGhlcndpc2UgdGhpcyBmaWVsZCBpcyBpZ25vcmVkKSB0b2xlcmF0ZXMgdGhlIHRhaW50LiBCeSBkZWZhdWx0LFxuaXQgaXMgbm90IHNldCwgd2hpY2ggbWVhbnMgdG9sZXJhdGUgdGhlIHRhaW50IGZvcmV2ZXIgKGRvIG5vdCBldmljdCkuIFplcm8gYW5kXG5uZWdhdGl2ZSB2YWx1ZXMgd2lsbCBiZSB0cmVhdGVkIGFzIDAgKGV2aWN0IGltbWVkaWF0ZWx5KSBieSB0aGUgc3lzdGVtLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSBpcyB0aGUgdGFpbnQgdmFsdWUgdGhlIHRvbGVyYXRpb24gbWF0Y2hlcyB0by5cbklmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMsIHRoZSB2YWx1ZSBzaG91bGQgYmUgZW1wdHksIG90aGVyd2lzZSBqdXN0IGEgcmVndWxhciBzdHJpbmcuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwiY29uc29sZSI6eyJkZXNjcmlwdGlvbiI6IkNvbnNvbGUgY29udGFpbmVyIHNldHRpbmdzLiIsInByb3BlcnRpZXMiOnsiY2FDZXJ0aWZpY2F0ZSI6eyJkZXNjcmlwdGlvbiI6IkNlcnRpZmljYXRlIEF1dGhvcml0eSAoQ0EpIGNlcnRpZmljYXRlIHVzZWQgYnkgdGhlIGNvbnNvbGUgcHJveHkgZW5kcG9pbnQuIiwicGF0dGVybiI6Il4tLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0oW1xcc1xcU10qKS0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS1cXHM/JCIsInR5cGUiOiJzdHJpbmcifSwibm9kZVNlbGVjdG9yIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6Im9iamVjdCJ9LCJyZXBsaWNhcyI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIG51bWJlciBvZiBkZXNpcmVkIENvbnNvbGUgcG9kcy4gRGVmYXVsdDogXCIxXCIiLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlc291cmNlcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlUmVxdWlyZW1lbnRzIGRlc2NyaWJlcyB0aGUgY29tcHV0ZSByZXNvdXJjZSByZXF1aXJlbWVudHMuIiwicHJvcGVydGllcyI6eyJjbGFpbXMiOnsiZGVzY3JpcHRpb24iOiJDbGFpbXMgbGlzdHMgdGhlIG5hbWVzIG9mIHJlc291cmNlcywgZGVmaW5lZCBpbiBzcGVjLnJlc291cmNlQ2xhaW1zLFxudGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci5cblxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgdGhlXG5EeW5hbWljUmVzb3VyY2VBbGxvY2F0aW9uIGZlYXR1cmUgZ2F0ZS5cblxuVGhpcyBmaWVsZCBpcyBpbW11dGFibGUuIEl0IGNhbiBvbmx5IGJlIHNldCBmb3IgY29udGFpbmVycy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlQ2xhaW0gcmVmZXJlbmNlcyBvbmUgZW50cnkgaW4gUG9kU3BlYy5SZXNvdXJjZUNsYWltcy4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgbWF0Y2ggdGhlIG5hbWUgb2Ygb25lIGVudHJ5IGluIHBvZC5zcGVjLnJlc291cmNlQ2xhaW1zIG9mXG50aGUgUG9kIHdoZXJlIHRoaXMgZmllbGQgaXMgdXNlZC4gSXQgbWFrZXMgdGhhdCByZXNvdXJjZSBhdmFpbGFibGVcbmluc2lkZSBhIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn0sInJlcXVlc3QiOnsiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGlzIHRoZSBuYW1lIGNob3NlbiBmb3IgYSByZXF1ZXN0IGluIHRoZSByZWZlcmVuY2VkIGNsYWltLlxuSWYgZW1wdHksIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgY2xhaW0gaXMgbWFkZSBhdmFpbGFibGUsIG90aGVyd2lzZVxub25seSB0aGUgcmVzdWx0IG9mIHRoaXMgcmVxdWVzdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtbWFwLWtleXMiOlsibmFtZSJdLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoibWFwIn0sImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuXG5JZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsXG5vdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidG9sZXJhdGlvbnMiOnsiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgcG9kIHRoaXMgVG9sZXJhdGlvbiBpcyBhdHRhY2hlZCB0byB0b2xlcmF0ZXMgYW55IHRhaW50IHRoYXQgbWF0Y2hlc1xudGhlIHRyaXBsZSBcdTAwM2NrZXksdmFsdWUsZWZmZWN0XHUwMDNlIHVzaW5nIHRoZSBtYXRjaGluZyBvcGVyYXRvciBcdTAwM2NvcGVyYXRvclx1MDAzZS4iLCJwcm9wZXJ0aWVzIjp7ImVmZmVjdCI6eyJkZXNjcmlwdGlvbiI6IkVmZmVjdCBpbmRpY2F0ZXMgdGhlIHRhaW50IGVmZmVjdCB0byBtYXRjaC4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGVmZmVjdHMuXG5XaGVuIHNwZWNpZmllZCwgYWxsb3dlZCB2YWx1ZXMgYXJlIE5vU2NoZWR1bGUsIFByZWZlck5vU2NoZWR1bGUgYW5kIE5vRXhlY3V0ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSBpcyB0aGUgdGFpbnQga2V5IHRoYXQgdGhlIHRvbGVyYXRpb24gYXBwbGllcyB0by4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGtleXMuXG5JZiB0aGUga2V5IGlzIGVtcHR5LCBvcGVyYXRvciBtdXN0IGJlIEV4aXN0czsgdGhpcyBjb21iaW5hdGlvbiBtZWFucyB0byBtYXRjaCBhbGwgdmFsdWVzIGFuZCBhbGwga2V5cy4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiT3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgdmFsdWUuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEV4aXN0cyBhbmQgRXF1YWwuIERlZmF1bHRzIHRvIEVxdWFsLlxuRXhpc3RzIGlzIGVxdWl2YWxlbnQgdG8gd2lsZGNhcmQgZm9yIHZhbHVlLCBzbyB0aGF0IGEgcG9kIGNhblxudG9sZXJhdGUgYWxsIHRhaW50cyBvZiBhIHBhcnRpY3VsYXIgY2F0ZWdvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9uU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25TZWNvbmRzIHJlcHJlc2VudHMgdGhlIHBlcmlvZCBvZiB0aW1lIHRoZSB0b2xlcmF0aW9uICh3aGljaCBtdXN0IGJlXG5vZiBlZmZlY3QgTm9FeGVjdXRlLCBvdGhlcndpc2UgdGhpcyBmaWVsZCBpcyBpZ25vcmVkKSB0b2xlcmF0ZXMgdGhlIHRhaW50LiBCeSBkZWZhdWx0LFxuaXQgaXMgbm90IHNldCwgd2hpY2ggbWVhbnMgdG9sZXJhdGUgdGhlIHRhaW50IGZvcmV2ZXIgKGRvIG5vdCBldmljdCkuIFplcm8gYW5kXG5uZWdhdGl2ZSB2YWx1ZXMgd2lsbCBiZSB0cmVhdGVkIGFzIDAgKGV2aWN0IGltbWVkaWF0ZWx5KSBieSB0aGUgc3lzdGVtLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSBpcyB0aGUgdGFpbnQgdmFsdWUgdGhlIHRvbGVyYXRpb24gbWF0Y2hlcyB0by5cbklmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMsIHRoZSB2YWx1ZSBzaG91bGQgYmUgZW1wdHksIG90aGVyd2lzZSBqdXN0IGEgcmVndWxhciBzdHJpbmcuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwiZGF0YUNvbGxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkRhdGEgQ29sbGVjdG9yIGNvbnRhaW5lciBzZXR0aW5ncy4iLCJwcm9wZXJ0aWVzIjp7InJlc291cmNlcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlUmVxdWlyZW1lbnRzIGRlc2NyaWJlcyB0aGUgY29tcHV0ZSByZXNvdXJjZSByZXF1aXJlbWVudHMuIiwicHJvcGVydGllcyI6eyJjbGFpbXMiOnsiZGVzY3JpcHRpb24iOiJDbGFpbXMgbGlzdHMgdGhlIG5hbWVzIG9mIHJlc291cmNlcywgZGVmaW5lZCBpbiBzcGVjLnJlc291cmNlQ2xhaW1zLFxudGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci5cblxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgdGhlXG5EeW5hbWljUmVzb3VyY2VBbGxvY2F0aW9uIGZlYXR1cmUgZ2F0ZS5cblxuVGhpcyBmaWVsZCBpcyBpbW11dGFibGUuIEl0IGNhbiBvbmx5IGJlIHNldCBmb3IgY29udGFpbmVycy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlQ2xhaW0gcmVmZXJlbmNlcyBvbmUgZW50cnkgaW4gUG9kU3BlYy5SZXNvdXJjZUNsYWltcy4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgbWF0Y2ggdGhlIG5hbWUgb2Ygb25lIGVudHJ5IGluIHBvZC5zcGVjLnJlc291cmNlQ2xhaW1zIG9mXG50aGUgUG9kIHdoZXJlIHRoaXMgZmllbGQgaXMgdXNlZC4gSXQgbWFrZXMgdGhhdCByZXNvdXJjZSBhdmFpbGFibGVcbmluc2lkZSBhIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn0sInJlcXVlc3QiOnsiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGlzIHRoZSBuYW1lIGNob3NlbiBmb3IgYSByZXF1ZXN0IGluIHRoZSByZWZlcmVuY2VkIGNsYWltLlxuSWYgZW1wdHksIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgY2xhaW0gaXMgbWFkZSBhdmFpbGFibGUsIG90aGVyd2lzZVxub25seSB0aGUgcmVzdWx0IG9mIHRoaXMgcmVxdWVzdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtbWFwLWtleXMiOlsibmFtZSJdLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoibWFwIn0sImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuXG5JZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsXG5vdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwicmVwbGljYXMiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBudW1iZXIgb2YgZGVzaXJlZCBPTFMgcG9kcy4gRGVmYXVsdDogXCIxXCIiLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sImludHJvc3BlY3Rpb25FbmFibGVkIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlIGludHJvc3BlY3Rpb24gZmVhdHVyZXMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJsb2dMZXZlbCI6eyJkZWZhdWx0IjoiSU5GTyIsImRlc2NyaXB0aW9uIjoiTG9nIGxldmVsLiBWYWxpZCBvcHRpb25zIGFyZSBERUJVRywgSU5GTywgV0FSTklORywgRVJST1IgYW5kIENSSVRJQ0FMLiBEZWZhdWx0OiBcIklORk9cIi4iLCJlbnVtIjpbIkRFQlVHIiwiSU5GTyIsIldBUk5JTkciLCJFUlJPUiIsIkNSSVRJQ0FMIl0sInR5cGUiOiJzdHJpbmcifSwicHJveHlDb25maWciOnsiZGVzY3JpcHRpb24iOiJQcm94eSBzZXR0aW5ncyBmb3IgY29ubmVjdGluZyB0byBleHRlcm5hbCBzZXJ2ZXJzLCBzdWNoIGFzIExMTSBwcm92aWRlcnMuIiwicHJvcGVydGllcyI6eyJwcm94eUNBQ2VydGlmaWNhdGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgY29uZmlnbWFwIGhvbGRpbmcgcHJveHkgQ0EgY2VydGlmaWNhdGUiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5UaGlzIGZpZWxkIGlzIGVmZmVjdGl2ZWx5IHJlcXVpcmVkLCBidXQgZHVlIHRvIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGlzXG5hbGxvd2VkIHRvIGJlIGVtcHR5LiBJbnN0YW5jZXMgb2YgdGhpcyB0eXBlIHdpdGggYW4gZW1wdHkgdmFsdWUgaGVyZSBhcmVcbmFsbW9zdCBjZXJ0YWlubHkgd3JvbmcuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwicHJveHlVUkwiOnsiZGVzY3JpcHRpb24iOiJQcm94eSBVUkwsIGUuZy4gaHR0cHM6Ly9wcm94eS5leGFtcGxlLmNvbTo4MDgwXG5JZiBub3Qgc3BlY2lmaWVkLCB0aGUgY2x1c3RlciB3aWRlIHByb3h5IHdpbGwgYmUgdXNlZCwgdGhvdWdoIGVudiB2YXIgXCJodHRwc19wcm94eVwiLiIsInBhdHRlcm4iOiJeaHR0cHM/Oi8vLiokIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJxdWVyeUZpbHRlcnMiOnsiZGVzY3JpcHRpb24iOiJRdWVyeSBmaWx0ZXJzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJRdWVyeUZpbHRlcnNTcGVjIGRlZmluZXMgZmlsdGVycyB0byBtYW5pcHVsYXRlIHF1ZXN0aW9ucy9xdWVyaWVzLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6IkZpbHRlciBuYW1lLiIsInR5cGUiOiJzdHJpbmcifSwicGF0dGVybiI6eyJkZXNjcmlwdGlvbiI6IkZpbHRlciBwYXR0ZXJuLiIsInR5cGUiOiJzdHJpbmcifSwicmVwbGFjZVdpdGgiOnsiZGVzY3JpcHRpb24iOiJSZXBsYWNlbWVudCBmb3IgdGhlIG1hdGNoZWQgcGF0dGVybi4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJxdW90YUhhbmRsZXJzQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiTExNIFRva2VuIFF1b3RhIENvbmZpZ3VyYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImVuYWJsZVRva2VuSGlzdG9yeSI6eyJkZXNjcmlwdGlvbiI6IkVuYWJsZSB0b2tlbiBoaXN0b3J5IiwidHlwZSI6ImJvb2xlYW4ifSwibGltaXRlcnNDb25maWciOnsiZGVzY3JpcHRpb24iOiJUb2tlbiBxdW90YSBsaW1pdGVycyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTGltaXRlckNvbmZpZyBkZWZpbmVzIHNldHRpbmdzIGZvciBhIHRva2VuIHF1b3RhIGxpbWl0ZXIiLCJwcm9wZXJ0aWVzIjp7ImluaXRpYWxRdW90YSI6eyJkZXNjcmlwdGlvbiI6IkluaXRpYWwgdmFsdWUgb2YgdGhlIHRva2VuIHF1b3RhIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGxpbWl0ZXIiLCJ0eXBlIjoic3RyaW5nIn0sInBlcmlvZCI6eyJkZXNjcmlwdGlvbiI6IlBlcmlvZCBvZiB0aW1lIHRoZSB0b2tlbiBxdW90YSBpcyBmb3IiLCJwYXR0ZXJuIjoiXigxXFxzKyhkYXl8bW9udGh8eWVhcnxkfG18eSl8KFsyLTldWzAtOV0qfFsxLTldWzAtOV17Mix9KVxccysoZGF5c3xtb250aHN8eWVhcnN8ZHxtfHkpKSQiLCJ0eXBlIjoic3RyaW5nIn0sInF1b3RhSW5jcmVhc2UiOnsiZGVzY3JpcHRpb24iOiJUb2tlbiBxdW90YSBpbmNyZWFzZSBzdGVwIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIGxpbWl0ZXIiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpbml0aWFsUXVvdGEiLCJuYW1lIiwicGVyaW9kIiwicXVvdGFJbmNyZWFzZSIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwicmFnIjp7ImRlc2NyaXB0aW9uIjoiUkFHIGRhdGFiYXNlcyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUkFHU3BlYyBkZWZpbmVzIGhvdyB0byByZXRyaWV2ZSBhIFJBRyBkYXRhYmFzZXMuIiwicHJvcGVydGllcyI6eyJpbWFnZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBVUkwgb2YgdGhlIGNvbnRhaW5lciBpbWFnZSB0byB1c2UgYXMgYSBSQUcgc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJpbmRleElEIjp7ImRlc2NyaXB0aW9uIjoiVGhlIEluZGV4IElEIG9mIHRoZSBSQUcgZGF0YWJhc2UiLCJ0eXBlIjoic3RyaW5nIn0sImluZGV4UGF0aCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwYXRoIHRvIHRoZSBSQUcgZGF0YWJhc2UgaW5zaWRlIG9mIHRoZSBjb250YWluZXIgaW1hZ2UiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpbWFnZSIsImluZGV4SUQiLCJpbmRleFBhdGgiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwic3RvcmFnZSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNpc3RlbnQgU3RvcmFnZSBDb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJjbGFzcyI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2UgQ2xhc3Mgb2YgdGhlIFJlcXVlc3RlZCBWb2x1bWUiLCJ0eXBlIjoic3RyaW5nIn0sInNpemUiOnsiZGVzY3JpcHRpb24iOiJTaXplIG9mIHRoZSBSZXF1ZXN0ZWQgVm9sdW1lIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0bHNDb25maWciOnsiZGVzY3JpcHRpb24iOiJUTFMgY29uZmlndXJhdGlvbiBvZiB0aGUgTGlnaHRzcGVlZCBiYWNrZW5kJ3MgSFRUUFMgZW5kcG9pbnQiLCJwcm9wZXJ0aWVzIjp7ImtleUNlcnRTZWNyZXRSZWYiOnsiZGVzY3JpcHRpb24iOiJLZXlTZWNyZXRSZWYgaXMgdGhlIHNlY3JldCB0aGF0IGhvbGRzIHRoZSBUTFMga2V5LiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cblRoaXMgZmllbGQgaXMgZWZmZWN0aXZlbHkgcmVxdWlyZWQsIGJ1dCBkdWUgdG8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgaXNcbmFsbG93ZWQgdG8gYmUgZW1wdHkuIEluc3RhbmNlcyBvZiB0aGlzIHR5cGUgd2l0aCBhbiBlbXB0eSB2YWx1ZSBoZXJlIGFyZVxuYWxtb3N0IGNlcnRhaW5seSB3cm9uZy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0bHNTZWN1cml0eVByb2ZpbGUiOnsiZGVzY3JpcHRpb24iOiJUTFMgU2VjdXJpdHkgUHJvZmlsZSB1c2VkIGJ5IEFQSSBlbmRwb2ludHMiLCJwcm9wZXJ0aWVzIjp7ImN1c3RvbSI6eyJkZXNjcmlwdGlvbiI6ImN1c3RvbSBpcyBhIHVzZXItZGVmaW5lZCBUTFMgc2VjdXJpdHkgcHJvZmlsZS4gQmUgZXh0cmVtZWx5IGNhcmVmdWwgdXNpbmcgYSBjdXN0b21cbnByb2ZpbGUgYXMgaW52YWxpZCBjb25maWd1cmF0aW9ucyBjYW4gYmUgY2F0YXN0cm9waGljLiBBbiBleGFtcGxlIGN1c3RvbSBwcm9maWxlXG5sb29rcyBsaWtlIHRoaXM6XG5cbiAgY2lwaGVyczpcblxuICAgIC0gRUNESEUtRUNEU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gRUNESEUtUlNBLUNIQUNIQTIwLVBPTFkxMzA1XG5cbiAgICAtIEVDREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gIG1pblRMU1ZlcnNpb246IFZlcnNpb25UTFMxMSIsIm51bGxhYmxlIjp0cnVlLCJwcm9wZXJ0aWVzIjp7ImNpcGhlcnMiOnsiZGVzY3JpcHRpb24iOiJjaXBoZXJzIGlzIHVzZWQgdG8gc3BlY2lmeSB0aGUgY2lwaGVyIGFsZ29yaXRobXMgdGhhdCBhcmUgbmVnb3RpYXRlZFxuZHVyaW5nIHRoZSBUTFMgaGFuZHNoYWtlLiAgT3BlcmF0b3JzIG1heSByZW1vdmUgZW50cmllcyB0aGVpciBvcGVyYW5kc1xuZG8gbm90IHN1cHBvcnQuICBGb3IgZXhhbXBsZSwgdG8gdXNlIERFUy1DQkMzLVNIQSAgKHlhbWwpOlxuXG4gIGNpcGhlcnM6XG4gICAgLSBERVMtQ0JDMy1TSEEiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJtaW5UTFNWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoibWluVExTVmVyc2lvbiBpcyB1c2VkIHRvIHNwZWNpZnkgdGhlIG1pbmltYWwgdmVyc2lvbiBvZiB0aGUgVExTIHByb3RvY29sXG50aGF0IGlzIG5lZ290aWF0ZWQgZHVyaW5nIHRoZSBUTFMgaGFuZHNoYWtlLiBGb3IgZXhhbXBsZSwgdG8gdXNlIFRMU1xudmVyc2lvbnMgMS4xLCAxLjIgYW5kIDEuMyAoeWFtbCk6XG5cbiAgbWluVExTVmVyc2lvbjogVmVyc2lvblRMUzExXG5cbk5PVEU6IGN1cnJlbnRseSB0aGUgaGlnaGVzdCBtaW5UTFNWZXJzaW9uIGFsbG93ZWQgaXMgVmVyc2lvblRMUzEyIiwiZW51bSI6WyJWZXJzaW9uVExTMTAiLCJWZXJzaW9uVExTMTEiLCJWZXJzaW9uVExTMTIiLCJWZXJzaW9uVExTMTMiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJpbnRlcm1lZGlhdGUiOnsiZGVzY3JpcHRpb24iOiJpbnRlcm1lZGlhdGUgaXMgYSBUTFMgc2VjdXJpdHkgcHJvZmlsZSBiYXNlZCBvbjpcblxuaHR0cHM6Ly93aWtpLm1vemlsbGEub3JnL1NlY3VyaXR5L1NlcnZlcl9TaWRlX1RMUyNJbnRlcm1lZGlhdGVfY29tcGF0aWJpbGl0eV8uMjhyZWNvbW1lbmRlZC4yOVxuXG5hbmQgbG9va3MgbGlrZSB0aGlzICh5YW1sKTpcblxuICBjaXBoZXJzOlxuXG4gICAgLSBUTFNfQUVTXzEyOF9HQ01fU0hBMjU2XG5cbiAgICAtIFRMU19BRVNfMjU2X0dDTV9TSEEzODRcblxuICAgIC0gVExTX0NIQUNIQTIwX1BPTFkxMzA1X1NIQTI1NlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMjU2LUdDTS1TSEEzODRcblxuICAgIC0gRUNESEUtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIEVDREhFLUVDRFNBLUNIQUNIQTIwLVBPTFkxMzA1XG5cbiAgICAtIEVDREhFLVJTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIERIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODRcblxuICBtaW5UTFNWZXJzaW9uOiBWZXJzaW9uVExTMTIiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6Im9iamVjdCJ9LCJtb2Rlcm4iOnsiZGVzY3JpcHRpb24iOiJtb2Rlcm4gaXMgYSBUTFMgc2VjdXJpdHkgcHJvZmlsZSBiYXNlZCBvbjpcblxuaHR0cHM6Ly93aWtpLm1vemlsbGEub3JnL1NlY3VyaXR5L1NlcnZlcl9TaWRlX1RMUyNNb2Rlcm5fY29tcGF0aWJpbGl0eVxuXG5hbmQgbG9va3MgbGlrZSB0aGlzICh5YW1sKTpcblxuICBjaXBoZXJzOlxuXG4gICAgLSBUTFNfQUVTXzEyOF9HQ01fU0hBMjU2XG5cbiAgICAtIFRMU19BRVNfMjU2X0dDTV9TSEEzODRcblxuICAgIC0gVExTX0NIQUNIQTIwX1BPTFkxMzA1X1NIQTI1NlxuXG4gIG1pblRMU1ZlcnNpb246IFZlcnNpb25UTFMxMyIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoib2JqZWN0In0sIm9sZCI6eyJkZXNjcmlwdGlvbiI6Im9sZCBpcyBhIFRMUyBzZWN1cml0eSBwcm9maWxlIGJhc2VkIG9uOlxuXG5odHRwczovL3dpa2kubW96aWxsYS5vcmcvU2VjdXJpdHkvU2VydmVyX1NpZGVfVExTI09sZF9iYWNrd2FyZF9jb21wYXRpYmlsaXR5XG5cbmFuZCBsb29rcyBsaWtlIHRoaXMgKHlhbWwpOlxuXG4gIGNpcGhlcnM6XG5cbiAgICAtIFRMU19BRVNfMTI4X0dDTV9TSEEyNTZcblxuICAgIC0gVExTX0FFU18yNTZfR0NNX1NIQTM4NFxuXG4gICAgLSBUTFNfQ0hBQ0hBMjBfUE9MWTEzMDVfU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEVDREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODRcblxuICAgIC0gRUNESEUtRUNEU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gRUNESEUtUlNBLUNIQUNIQTIwLVBPTFkxMzA1XG5cbiAgICAtIERIRS1SU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gREhFLVJTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gICAgLSBESEUtUlNBLUNIQUNIQTIwLVBPTFkxMzA1XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzEyOC1TSEEyNTZcblxuICAgIC0gRUNESEUtUlNBLUFFUzEyOC1TSEEyNTZcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMTI4LVNIQVxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMTI4LVNIQVxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMyNTYtU0hBMzg0XG5cbiAgICAtIEVDREhFLVJTQS1BRVMyNTYtU0hBMzg0XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzI1Ni1TSEFcblxuICAgIC0gRUNESEUtUlNBLUFFUzI1Ni1TSEFcblxuICAgIC0gREhFLVJTQS1BRVMxMjgtU0hBMjU2XG5cbiAgICAtIERIRS1SU0EtQUVTMjU2LVNIQTI1NlxuXG4gICAgLSBBRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBBRVMyNTYtR0NNLVNIQTM4NFxuXG4gICAgLSBBRVMxMjgtU0hBMjU2XG5cbiAgICAtIEFFUzI1Ni1TSEEyNTZcblxuICAgIC0gQUVTMTI4LVNIQVxuXG4gICAgLSBBRVMyNTYtU0hBXG5cbiAgICAtIERFUy1DQkMzLVNIQVxuXG4gIG1pblRMU1ZlcnNpb246IFZlcnNpb25UTFMxMCIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIGlzIG9uZSBvZiBPbGQsIEludGVybWVkaWF0ZSwgTW9kZXJuIG9yIEN1c3RvbS4gQ3VzdG9tIHByb3ZpZGVzXG50aGUgYWJpbGl0eSB0byBzcGVjaWZ5IGluZGl2aWR1YWwgVExTIHNlY3VyaXR5IHByb2ZpbGUgcGFyYW1ldGVycy5cbk9sZCwgSW50ZXJtZWRpYXRlIGFuZCBNb2Rlcm4gYXJlIFRMUyBzZWN1cml0eSBwcm9maWxlcyBiYXNlZCBvbjpcblxuaHR0cHM6Ly93aWtpLm1vemlsbGEub3JnL1NlY3VyaXR5L1NlcnZlcl9TaWRlX1RMUyNSZWNvbW1lbmRlZF9jb25maWd1cmF0aW9uc1xuXG5UaGUgcHJvZmlsZXMgYXJlIGludGVudCBiYXNlZCwgc28gdGhleSBtYXkgY2hhbmdlIG92ZXIgdGltZSBhcyBuZXcgY2lwaGVycyBhcmUgZGV2ZWxvcGVkIGFuZCBleGlzdGluZyBjaXBoZXJzXG5hcmUgZm91bmQgdG8gYmUgaW5zZWN1cmUuICBEZXBlbmRpbmcgb24gcHJlY2lzZWx5IHdoaWNoIGNpcGhlcnMgYXJlIGF2YWlsYWJsZSB0byBhIHByb2Nlc3MsIHRoZSBsaXN0IG1heSBiZVxucmVkdWNlZC5cblxuTm90ZSB0aGF0IHRoZSBNb2Rlcm4gcHJvZmlsZSBpcyBjdXJyZW50bHkgbm90IHN1cHBvcnRlZCBiZWNhdXNlIGl0IGlzIG5vdFxueWV0IHdlbGwgYWRvcHRlZCBieSBjb21tb24gc29mdHdhcmUgbGlicmFyaWVzLiIsImVudW0iOlsiT2xkIiwiSW50ZXJtZWRpYXRlIiwiTW9kZXJuIiwiQ3VzdG9tIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidXNlckRhdGFDb2xsZWN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVXNlciBkYXRhIGNvbGxlY3Rpb24gc3dpdGNoZXMiLCJwcm9wZXJ0aWVzIjp7ImZlZWRiYWNrRGlzYWJsZWQiOnsidHlwZSI6ImJvb2xlYW4ifSwidHJhbnNjcmlwdHNEaXNhYmxlZCI6eyJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiZGVmYXVsdE1vZGVsIl0sInR5cGUiOiJvYmplY3QifSwib2xzRGF0YUNvbGxlY3RvciI6eyJkZXNjcmlwdGlvbiI6Ik9MU0RhdGFDb2xsZWN0b3JTcGVjIGRlZmluZXMgYWxsb3dlZCBPTFMgZGF0YSBjb2xsZWN0b3IgY29uZmlndXJhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJJTkZPIiwiZGVzY3JpcHRpb24iOiJMb2cgbGV2ZWwuIFZhbGlkIG9wdGlvbnMgYXJlIERFQlVHLCBJTkZPLCBXQVJOSU5HLCBFUlJPUiBhbmQgQ1JJVElDQUwuIERlZmF1bHQ6IFwiSU5GT1wiLiIsImVudW0iOlsiREVCVUciLCJJTkZPIiwiV0FSTklORyIsIkVSUk9SIiwiQ1JJVElDQUwiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibGxtIiwib2xzIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiT0xTQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE9MUyBkZXBsb3ltZW50LiIsInByb3BlcnRpZXMiOnsiY29uZGl0aW9ucyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuXG5UaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uXG5UaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi5cbkZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZVxud2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi5cblByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLFxuYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLlxuVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuXG5UaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS4iLCJtYXhMZW5ndGgiOjMxNiwicGF0dGVybiI6Il4oW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKi8pPygoW0EtWmEtejAtOV1bLUEtWmEtejAtOV8uXSopP1tBLVphLXowLTldKSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsiY29uZGl0aW9ucyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtdmFsaWRhdGlvbnMiOlt7Im1lc3NhZ2UiOiIubWV0YWRhdGEubmFtZSBtdXN0IGJlICdjbHVzdGVyJyIsInJ1bGUiOiJzZWxmLm1ldGFkYXRhLm5hbWUgPT0gJ2NsdXN0ZXInIn1dfX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoibWV0cmljcyIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjbHVzdGVycm9sZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLW9scy1tZXRyaWNzLXJlYWRlciJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9vbHMtbWV0cmljcy1hY2Nlc3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoidXNlci1hY2Nlc3MiLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoicXVlcnktYWNjZXNzIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjbHVzdGVycm9sZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLXF1ZXJ5LWFjY2VzcyJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9vbHMtYWNjZXNzIl0sInZlcmJzIjpbImdldCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Im1ldHJpY3MiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY2x1c3RlcnJvbGViaW5kaW5nIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImxpZ2h0c3BlZWQtb3BlcmF0b3IifSwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3Itb2xzLW1ldHJpY3MtcmVhZGVyIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3Itb2xzLW1ldHJpY3MtcmVhZGVyIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoicHJvbWV0aGV1cy1rOHMiLCJuYW1lc3BhY2UiOiJvcGVuc2hpZnQtbW9uaXRvcmluZyJ9XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJtZXRyaWNzIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InJvbGUiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibGlnaHRzcGVlZC1vcGVyYXRvciJ9LCJuYW1lIjoibGlnaHRzcGVlZC1vcGVyYXRvci1wcm9tZXRoZXVzLWs4cyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJlbmRwb2ludHMiLCJwb2RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJleHRlbnNpb25zIl0sInJlc291cmNlcyI6WyJpbmdyZXNzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm5ldHdvcmtpbmcuazhzLmlvIl0sInJlc291cmNlcyI6WyJpbmdyZXNzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoibWV0cmljcyIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJyb2xlYmluZGluZyIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLXByb21ldGhldXMtazhzIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoibGlnaHRzcGVlZC1vcGVyYXRvci1wcm9tZXRoZXVzLWs4cyJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Im1hbmFnZXIiLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiY29udHJvbGxlci1tYW5hZ2VyLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJtZXRyaWNzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
relatedImages:
  - name: lightspeed-service-api
    image: registry.redhat.io/openshift-lightspeed/lightspeed-service-api-rhel9@sha256:21cd7da3674c55e76caf60122a19419b4eda097388f148f8163712b81b4af1d8
  - name: lightspeed-console-plugin
    image: registry.redhat.io/openshift-lightspeed/lightspeed-console-plugin-rhel9@sha256:77dbdaeaf49ac970d7a470960b75d4078efcedc1dd1182414b078bd790ee53ea
  - name: lightspeed-operator
    image: registry.redhat.io/openshift-lightspeed/lightspeed-rhel9-operator@sha256:ff6c11d247307e4c70a6fd2a0b86ed2396c272520cd2fe3a0afb0f2c15dcc795
  - name: lightspeed-operator-bundle
    image: registry.redhat.io/openshift-lightspeed/lightspeed-operator-bundle@sha256:ad10cdce09322f5a2da43fb1b45d7952808b822a744c9c5a47f42ddd95fe9916
schema: olm.bundle
---
schema: olm.channel
package: lightspeed-operator
name: alpha
entries:
  - name: lightspeed-operator.v1.0.0
    skipRange: ">=0.1.0 <1.0.0"
---
schema: olm.channel
package: lightspeed-operator
name: stable
entries:
  - name: lightspeed-operator.v1.0.0
    skipRange: ">=0.1.0 <1.0.0"
