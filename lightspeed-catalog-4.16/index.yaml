---
defaultChannel: stable
icon:
  base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIGlkPSJ1dWlkLTQ2NzAxNDY4LTY2NDEtNDhjYi05ODdhLWFkOGFhYWE0Y2M1NyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMzggMzgiPjxkZWZzPjxzdHlsZT4udXVpZC0wNWM4ZjUzZC0zOTZhLTRhNzctYjYxMC00Y2FlMTYwN2IzN2Z7ZmlsbDojZTAwO30udXVpZC0wNThiNjM1ZC1iNjFjLTQ2ZjQtOTgyYS1hOTFkNmEyMjYzZWJ7ZmlsbDojZmZmO30udXVpZC0wMTY4MTg4Yy1kMGE2LTQ5NmUtYTJkOC01Y2Q2ZWUzMGRjYjJ7ZmlsbDojZTBlMGUwO308L3N0eWxlPjwvZGVmcz48cGF0aCBjbGFzcz0idXVpZC0wNThiNjM1ZC1iNjFjLTQ2ZjQtOTgyYS1hOTFkNmEyMjYzZWIiIGQ9Im0yOCwxSDEwQzUuMDI5NDQsMSwxLDUuMDI5NDQsMSwxMHYxOGMwLDQuOTcwNTcsNC4wMjk0NCw5LDksOWgxOGM0Ljk3MDU2LDAsOS00LjAyOTQzLDktOVYxMGMwLTQuOTcwNTYtNC4wMjk0NC05LTktOWgwWiIvPjxwYXRoIGNsYXNzPSJ1dWlkLTAxNjgxODhjLWQwYTYtNDk2ZS1hMmQ4LTVjZDZlZTMwZGNiMiIgZD0ibTI4LDIuMjVjNC4yNzMzMiwwLDcuNzUsMy40NzY2NCw3Ljc1LDcuNzV2MThjMCw0LjI3MzM2LTMuNDc2NjgsNy43NS03Ljc1LDcuNzVIMTBjLTQuMjczMzIsMC03Ljc1LTMuNDc2NjQtNy43NS03Ljc1VjEwYzAtNC4yNzMzNiwzLjQ3NjY4LTcuNzUsNy43NS03Ljc1aDE4bTAtMS4yNUgxMEM1LjAyOTQyLDEsMSw1LjAyOTQ0LDEsMTB2MThjMCw0Ljk3MDU3LDQuMDI5NDIsOSw5LDloMThjNC45NzA1OCwwLDktNC4wMjk0Myw5LTlWMTBjMC00Ljk3MDU2LTQuMDI5NDItOS05LTloMFoiLz48cGF0aCBjbGFzcz0idXVpZC0wNWM4ZjUzZC0zOTZhLTRhNzctYjYxMC00Y2FlMTYwN2IzN2YiIGQ9Im0yMCwxNS42MjVjLS4zNDQ3MywwLS42MjUtLjI4MDI3LS42MjUtLjYyNXYtN2MwLS4zNDQ3My4yODAyNy0uNjI1LjYyNS0uNjI1cy42MjUuMjgwMjcuNjI1LjYyNXY3YzAsLjM0NDczLS4yODAyNy42MjUtLjYyNS42MjVaIi8+PHBhdGggY2xhc3M9InV1aWQtMDVjOGY1M2QtMzk2YS00YTc3LWI2MTAtNGNhZTE2MDdiMzdmIiBkPSJtMTYsMTkuNjI1aC03Yy0uMzQ0NzMsMC0uNjI1LS4yODAyNy0uNjI1LS42MjVzLjI4MDI3LS42MjUuNjI1LS42MjVoN2MuMzQ0NzMsMCwuNjI1LjI4MDI3LjYyNS42MjVzLS4yODAyNy42MjUtLjYyNS42MjVaIi8+PHBhdGggY2xhc3M9InV1aWQtMDVjOGY1M2QtMzk2YS00YTc3LWI2MTAtNGNhZTE2MDdiMzdmIiBkPSJtMjAsMzAuNjI1Yy0uMzQ0NzMsMC0uNjI1LS4yODAyNy0uNjI1LS42MjV2LTdjMC0uMzQ0NzMuMjgwMjctLjYyNS42MjUtLjYyNXMuNjI1LjI4MDI3LjYyNS42MjV2N2MwLC4zNDQ3My0uMjgwMjcuNjI1LS42MjUuNjI1WiIvPjxwYXRoIGQ9Im0zMC41NzY1NCwxOS4yMzk0NGMuMDI3OTUtLjA2NzY5LjAzOTU1LS4xMzk0Ny4wNDI4NS0uMjExNDkuMDAwNDktLjAwOTgzLjAwNTYyLS4wMTgwNy4wMDU2Mi0uMDI3OTVzLS4wMDUxMy0uMDE4MTMtLjAwNTYyLS4wMjc5NWMtLjAwMzMtLjA3MjAyLS4wMTQ4OS0uMTQzOC0uMDQyODUtLjIxMTQ5LS4wMjAwMi0uMDQ3OTEtLjA1MzgzLS4wODY2Ny0uMDg0NDctLjEyNzc1LS4wMTgwNy0uMDI0NDgtLjAyNzU5LS4wNTMwNC0uMDQ5NjgtLjA3NTJsLTItMmMtLjI0NDE0LS4yNDQxNC0uNjQwNjItLjI0NDE0LS44ODQ3NywwLS4yNDMxNi4yNDQxNC0uMjQzMTYuNjQwNjIsMCwuODg0NzdsLjkzMzIzLjkzMjYyaC05LjQ5MDg0Yy0uMzQ0NzMsMC0uNjI1LjI4MDI3LS42MjUuNjI1cy4yODAyNy42MjUuNjI1LjYyNWg5LjQ5MDg0bC0uOTMzMjMuOTMyNjJjLS4yNDMxNi4yNDQxNC0uMjQzMTYuNjQwNjIsMCwuODg0NzcuMTIyMDcuMTIyMDcuMjgyMjMuMTgyNjIuNDQyMzguMTgyNjJzLjMyMDMxLS4wNjA1NS40NDIzOC0uMTgyNjJsMi0yYy4wMjIwOS0uMDIyMTYuMDMxNjItLjA1MDcyLjA0OTY4LS4wNzUyLjAzMDY0LS4wNDEwOC4wNjQ0NS0uMDc5ODMuMDg0NDctLjEyNzc1WiIvPjxwYXRoIGQ9Im0xNywxNi42MjVjLS4xNjAxNiwwLS4zMjAzMS0uMDYwNTUtLjQ0MjM4LS4xODI2MmwtNC00Yy0uMjQzMTYtLjI0NDE0LS4yNDMxNi0uNjQwNjIsMC0uODg0NzcuMjQ0MTQtLjI0NDE0LjY0MDYyLS4yNDQxNC44ODQ3NywwbDQsNGMuMjQzMTYuMjQ0MTQuMjQzMTYuNjQwNjIsMCwuODg0NzctLjEyMjA3LjEyMjA3LS4yODIyMy4xODI2Mi0uNDQyMzguMTgyNjJaIi8+PHBhdGggZD0ibTEzLDI2LjYyNWMtLjE2MDE2LDAtLjMyMDMxLS4wNjA1NS0uNDQyMzgtLjE4MjYyLS4yNDMxNi0uMjQ0MTQtLjI0MzE2LS42NDA2MiwwLS44ODQ3N2w0LTRjLjI0NDE0LS4yNDQxNC42NDA2Mi0uMjQ0MTQuODg0NzcsMCwuMjQzMTYuMjQ0MTQuMjQzMTYuNjQwNjIsMCwuODg0NzdsLTQsNGMtLjEyMjA3LjEyMjA3LS4yODIyMy4xODI2Mi0uNDQyMzguMTgyNjJaIi8+PHBhdGggY2xhc3M9InV1aWQtMDVjOGY1M2QtMzk2YS00YTc3LWI2MTAtNGNhZTE2MDdiMzdmIiBkPSJtMTcuNDIzODMsMTMuNjI1Yy0uMjg4MDksMC0uNTQ3ODUtLjIwMTE3LS42MTAzNS0uNDk1MTJsLS40MjQ4LTJjLS4wNzEyOS0uMzM3ODkuMTQzNTUtLjY2OTkyLjQ4MTQ1LS43NDEyMS4zMzg4Ny0uMDc1Mi42Njk5Mi4xNDM1NS43NDEyMS40ODE0NWwuNDI0OCwyYy4wNzEyOS4zMzc4OS0uMTQzNTUuNjY5OTItLjQ4MTQ1Ljc0MTIxLS4wNDM5NS4wMDk3Ny0uMDg3ODkuMDEzNjctLjEzMDg2LjAxMzY3WiIvPjxwYXRoIGNsYXNzPSJ1dWlkLTA1YzhmNTNkLTM5NmEtNGE3Ny1iNjEwLTRjYWUxNjA3YjM3ZiIgZD0ibTE0LjAwMDk4LDE3LjA0OThjLS4wNDI5NywwLS4wODY5MS0uMDAzOTEtLjEzMDg2LS4wMTM2N2wtMi0uNDI0OGMtLjMzNzg5LS4wNzEyOS0uNTUyNzMtLjQwMzMyLS40ODE0NS0uNzQxMjEuMDcyMjctLjMzNzg5LjQwMjM0LS41NTg1OS43NDEyMS0uNDgxNDVsMiwuNDI0OGMuMzM3ODkuMDcxMjkuNTUyNzMuNDAzMzIuNDgxNDUuNzQxMjEtLjA2MjUuMjkzOTUtLjMyMjI3LjQ5NTEyLS42MTAzNS40OTUxMloiLz48cGF0aCBjbGFzcz0idXVpZC0wNWM4ZjUzZC0zOTZhLTRhNzctYjYxMC00Y2FlMTYwN2IzN2YiIGQ9Im0xNy4wMDA5OCwyNy42MjVjLS4wNDI5NywwLS4wODY5MS0uMDAzOTEtLjEzMDg2LS4wMTM2Ny0uMzM3ODktLjA3MTI5LS41NTI3My0uNDAzMzItLjQ4MTQ1LS43NDEyMWwuNDI0OC0yYy4wNzIyNy0uMzM3ODkuNDAxMzctLjU1NTY2Ljc0MTIxLS40ODE0NS4zMzc4OS4wNzEyOS41NTI3My40MDMzMi40ODE0NS43NDEyMWwtLjQyNDgsMmMtLjA2MjUuMjkzOTUtLjMyMjI3LjQ5NTEyLS42MTAzNS40OTUxMloiLz48cGF0aCBjbGFzcz0idXVpZC0wNWM4ZjUzZC0zOTZhLTRhNzctYjYxMC00Y2FlMTYwN2IzN2YiIGQ9Im0xMS45OTkwMiwyMi42MjVjLS4yODgwOSwwLS41NDc4NS0uMjAxMTctLjYxMDM1LS40OTUxMi0uMDcxMjktLjMzNzg5LjE0MzU1LS42Njk5Mi40ODE0NS0uNzQxMjFsMi0uNDI0OGMuMzQwODItLjA3NjE3LjY2OTkyLjE0MzU1Ljc0MTIxLjQ4MTQ1cy0uMTQzNTUuNjY5OTItLjQ4MTQ1Ljc0MTIxbC0yLC40MjQ4Yy0uMDQzOTUuMDA5NzctLjA4Nzg5LjAxMzY3LS4xMzA4Ni4wMTM2N1oiLz48cGF0aCBkPSJtOSwxNS42Mjk4OGMtLjE2MDE2LDAtLjMyMDMxLS4wNzAzMS0uNDQwNDMtLjE5MDQzLS4wNTk1Ny0uMDU5NTctLjA5OTYxLS4xMjAxMi0uMTM5NjUtLjE5OTIyLS4wMzAyNy0uMDgwMDgtLjA0OTgtLjE2MDE2LS4wNDk4LS4yNDAyMywwLS4xNjAxNi4wNjkzNC0uMzIwMzEuMTg5NDUtLjQ0MDQzLjIzMDQ3LS4yMjk0OS42NTAzOS0uMjQwMjMuODc5ODgsMCwuMTIwMTIuMTIwMTIuMTkwNDMuMjgwMjcuMTkwNDMuNDQwNDMsMCwuMDgwMDgtLjAyMDUxLjE2MDE2LS4wNDk4LjI0MDIzLS4wMzAyNy4wNzkxLS4wODAwOC4xMzk2NS0uMTQwNjIuMTk5MjItLjEyMDEyLjEyMDEyLS4yNzkzLjE5MDQzLS40Mzk0NS4xOTA0M1oiLz48cGF0aCBkPSJtOSwyMy42Mjk4OGMtLjE2MDE2LDAtLjMyMDMxLS4wNzAzMS0uNDQwNDMtLjE5MDQzLS4xMjAxMi0uMTA5MzgtLjE4OTQ1LS4yNzkzLS4xODk0NS0uNDM5NDVzLjA2OTM0LS4zMjAzMS4xODk0NS0uNDQwNDNjLjIzMDQ3LS4yMjk0OS42NDA2Mi0uMjQwMjMuODc5ODgsMCwuMTIwMTIuMTIwMTIuMTkwNDMuMjgwMjcuMTkwNDMuNDQwNDNzLS4wNzAzMS4zMzAwOC0uMTkwNDMuNDM5NDVjLS4xMjAxMi4xMjAxMi0uMjc5My4xOTA0My0uNDM5NDUuMTkwNDNaIi8+PC9zdmc+
  mediatype: image/svg+xml
name: lightspeed-operator
schema: olm.package
---
image: registry.redhat.io/openshift-lightspeed/lightspeed-operator-bundle@sha256:78627f5bed3fa4fc207439a6144cb28c7d8493119394ad2a75382473418a70ac
name: lightspeed-operator.v1.0.5
package: lightspeed-operator
properties:
  - type: olm.gvk
    value:
      group: ols.openshift.io
      kind: OLSConfig
      version: v1alpha1
  - type: olm.package
    value:
      packageName: lightspeed-operator
      version: 1.0.5
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjUifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJvbHNjb25maWdzLm9scy5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6Im9scy5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiT0xTQ29uZmlnIiwibGlzdEtpbmQiOiJPTFNDb25maWdMaXN0IiwicGx1cmFsIjoib2xzY29uZmlncyIsInNpbmd1bGFyIjoib2xzY29uZmlnIn0sInNjb3BlIjoiQ2x1c3RlciIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiUmVkIEhhdCBPcGVuU2hpZnQgTGlnaHRzcGVlZCBpbnN0YW5jZS4gT0xTQ29uZmlnIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBvbHNjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik9MU0NvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBPTFNDb25maWciLCJwcm9wZXJ0aWVzIjp7ImZlYXR1cmVHYXRlcyI6eyJkZXNjcmlwdGlvbiI6IkZlYXR1cmUgR2F0ZXMgaG9sZHMgbGlzdCBvZiBmZWF0dXJlcyB0byBiZSBlbmFibGVkIGV4cGxpY2l0bHksIG90aGVyd2lzZSB0aGV5IGFyZSBkaXNhYmxlZCBieSBkZWZhdWx0LlxucG9zc2libGUgdmFsdWVzOiBNQ1BTZXJ2ZXIiLCJpdGVtcyI6eyJlbnVtIjpbIk1DUFNlcnZlciJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJsbG0iOnsiZGVzY3JpcHRpb24iOiJMTE1TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIGxhcmdlIGxhbmd1YWdlIG1vZGVsIChMTE0pLiIsInByb3BlcnRpZXMiOnsicHJvdmlkZXJzIjp7Iml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUHJvdmlkZXJTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTExNIHByb3ZpZGVyLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSSBWZXJzaW9uIGZvciBBenVyZSBPcGVuQUkgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNyZWRlbnRpYWxzU2VjcmV0UmVmIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNlY3JldCBvYmplY3QgdGhhdCBzdG9yZXMgQVBJIHByb3ZpZGVyIGNyZWRlbnRpYWxzIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LlxuVGhpcyBmaWVsZCBpcyBlZmZlY3RpdmVseSByZXF1aXJlZCwgYnV0IGR1ZSB0byBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBpc1xuYWxsb3dlZCB0byBiZSBlbXB0eS4gSW5zdGFuY2VzIG9mIHRoaXMgdHlwZSB3aXRoIGFuIGVtcHR5IHZhbHVlIGhlcmUgYXJlXG5hbG1vc3QgY2VydGFpbmx5IHdyb25nLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sImRlcGxveW1lbnROYW1lIjp7ImRlc2NyaXB0aW9uIjoiQXp1cmUgT3BlbkFJIGRlcGxveW1lbnQgbmFtZSIsInR5cGUiOiJzdHJpbmcifSwibW9kZWxzIjp7ImRlc2NyaXB0aW9uIjoiTGlzdCBvZiBtb2RlbHMgZnJvbSB0aGUgcHJvdmlkZXIiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik1vZGVsU3BlYyBkZWZpbmVzIHRoZSBMTE0gbW9kZWwgdG8gdXNlIGFuZCBpdHMgcGFyYW1ldGVycy4iLCJwcm9wZXJ0aWVzIjp7ImNvbnRleHRXaW5kb3dTaXplIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgbW9kZWwncyBjb250ZXh0IHdpbmRvdyBzaXplLiBEZWZhdWx0IGlzIHNwZWNpZmljIHRvIHByb3ZpZGVyL21vZGVsLiIsIm1pbmltdW0iOjEwMjQsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJNb2RlbCBuYW1lIiwidHlwZSI6InN0cmluZyJ9LCJwYXJhbWV0ZXJzIjp7ImRlc2NyaXB0aW9uIjoiTW9kZWwgQVBJIHBhcmFtZXRlcnMiLCJwcm9wZXJ0aWVzIjp7Im1heFRva2Vuc0ZvclJlc3BvbnNlIjp7ImRlc2NyaXB0aW9uIjoiTWF4IHRva2VucyBmb3IgcmVzcG9uc2UiLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ1cmwiOnsiZGVzY3JpcHRpb24iOiJNb2RlbCBBUEkgVVJMIiwicGF0dGVybiI6Il5odHRwcz86Ly8uKiQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJQcm92aWRlciBuYW1lIiwidHlwZSI6InN0cmluZyJ9LCJwcm9qZWN0SUQiOnsiZGVzY3JpcHRpb24iOiJXYXRzb254IFByb2plY3QgSUQiLCJ0eXBlIjoic3RyaW5nIn0sInRsc1NlY3VyaXR5UHJvZmlsZSI6eyJkZXNjcmlwdGlvbiI6IlRMUyBTZWN1cml0eSBQcm9maWxlIHVzZWQgYnkgY29ubmVjdGlvbiB0byBwcm92aWRlciIsInByb3BlcnRpZXMiOnsiY3VzdG9tIjp7ImRlc2NyaXB0aW9uIjoiY3VzdG9tIGlzIGEgdXNlci1kZWZpbmVkIFRMUyBzZWN1cml0eSBwcm9maWxlLiBCZSBleHRyZW1lbHkgY2FyZWZ1bCB1c2luZyBhIGN1c3RvbVxucHJvZmlsZSBhcyBpbnZhbGlkIGNvbmZpZ3VyYXRpb25zIGNhbiBiZSBjYXRhc3Ryb3BoaWMuIEFuIGV4YW1wbGUgY3VzdG9tIHByb2ZpbGVcbmxvb2tzIGxpa2UgdGhpczpcblxuICBjaXBoZXJzOlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBFQ0RIRS1SU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gRUNESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgbWluVExTVmVyc2lvbjogVmVyc2lvblRMUzExIiwibnVsbGFibGUiOnRydWUsInByb3BlcnRpZXMiOnsiY2lwaGVycyI6eyJkZXNjcmlwdGlvbiI6ImNpcGhlcnMgaXMgdXNlZCB0byBzcGVjaWZ5IHRoZSBjaXBoZXIgYWxnb3JpdGhtcyB0aGF0IGFyZSBuZWdvdGlhdGVkXG5kdXJpbmcgdGhlIFRMUyBoYW5kc2hha2UuICBPcGVyYXRvcnMgbWF5IHJlbW92ZSBlbnRyaWVzIHRoZWlyIG9wZXJhbmRzXG5kbyBub3Qgc3VwcG9ydC4gIEZvciBleGFtcGxlLCB0byB1c2UgREVTLUNCQzMtU0hBICAoeWFtbCk6XG5cbiAgY2lwaGVyczpcbiAgICAtIERFUy1DQkMzLVNIQSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sIm1pblRMU1ZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJtaW5UTFNWZXJzaW9uIGlzIHVzZWQgdG8gc3BlY2lmeSB0aGUgbWluaW1hbCB2ZXJzaW9uIG9mIHRoZSBUTFMgcHJvdG9jb2xcbnRoYXQgaXMgbmVnb3RpYXRlZCBkdXJpbmcgdGhlIFRMUyBoYW5kc2hha2UuIEZvciBleGFtcGxlLCB0byB1c2UgVExTXG52ZXJzaW9ucyAxLjEsIDEuMiBhbmQgMS4zICh5YW1sKTpcblxuICBtaW5UTFNWZXJzaW9uOiBWZXJzaW9uVExTMTFcblxuTk9URTogY3VycmVudGx5IHRoZSBoaWdoZXN0IG1pblRMU1ZlcnNpb24gYWxsb3dlZCBpcyBWZXJzaW9uVExTMTIiLCJlbnVtIjpbIlZlcnNpb25UTFMxMCIsIlZlcnNpb25UTFMxMSIsIlZlcnNpb25UTFMxMiIsIlZlcnNpb25UTFMxMyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImludGVybWVkaWF0ZSI6eyJkZXNjcmlwdGlvbiI6ImludGVybWVkaWF0ZSBpcyBhIFRMUyBzZWN1cml0eSBwcm9maWxlIGJhc2VkIG9uOlxuXG5odHRwczovL3dpa2kubW96aWxsYS5vcmcvU2VjdXJpdHkvU2VydmVyX1NpZGVfVExTI0ludGVybWVkaWF0ZV9jb21wYXRpYmlsaXR5Xy4yOHJlY29tbWVuZGVkLjI5XG5cbmFuZCBsb29rcyBsaWtlIHRoaXMgKHlhbWwpOlxuXG4gIGNpcGhlcnM6XG5cbiAgICAtIFRMU19BRVNfMTI4X0dDTV9TSEEyNTZcblxuICAgIC0gVExTX0FFU18yNTZfR0NNX1NIQTM4NFxuXG4gICAgLSBUTFNfQ0hBQ0hBMjBfUE9MWTEzMDVfU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEVDREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODRcblxuICAgIC0gRUNESEUtRUNEU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gRUNESEUtUlNBLUNIQUNIQTIwLVBPTFkxMzA1XG5cbiAgICAtIERIRS1SU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gREhFLVJTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gIG1pblRMU1ZlcnNpb246IFZlcnNpb25UTFMxMiIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoib2JqZWN0In0sIm1vZGVybiI6eyJkZXNjcmlwdGlvbiI6Im1vZGVybiBpcyBhIFRMUyBzZWN1cml0eSBwcm9maWxlIGJhc2VkIG9uOlxuXG5odHRwczovL3dpa2kubW96aWxsYS5vcmcvU2VjdXJpdHkvU2VydmVyX1NpZGVfVExTI01vZGVybl9jb21wYXRpYmlsaXR5XG5cbmFuZCBsb29rcyBsaWtlIHRoaXMgKHlhbWwpOlxuXG4gIGNpcGhlcnM6XG5cbiAgICAtIFRMU19BRVNfMTI4X0dDTV9TSEEyNTZcblxuICAgIC0gVExTX0FFU18yNTZfR0NNX1NIQTM4NFxuXG4gICAgLSBUTFNfQ0hBQ0hBMjBfUE9MWTEzMDVfU0hBMjU2XG5cbiAgbWluVExTVmVyc2lvbjogVmVyc2lvblRMUzEzIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJvYmplY3QifSwib2xkIjp7ImRlc2NyaXB0aW9uIjoib2xkIGlzIGEgVExTIHNlY3VyaXR5IHByb2ZpbGUgYmFzZWQgb246XG5cbmh0dHBzOi8vd2lraS5tb3ppbGxhLm9yZy9TZWN1cml0eS9TZXJ2ZXJfU2lkZV9UTFMjT2xkX2JhY2t3YXJkX2NvbXBhdGliaWxpdHlcblxuYW5kIGxvb2tzIGxpa2UgdGhpcyAoeWFtbCk6XG5cbiAgY2lwaGVyczpcblxuICAgIC0gVExTX0FFU18xMjhfR0NNX1NIQTI1NlxuXG4gICAgLSBUTFNfQUVTXzI1Nl9HQ01fU0hBMzg0XG5cbiAgICAtIFRMU19DSEFDSEEyMF9QT0xZMTMwNV9TSEEyNTZcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gRUNESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIEVDREhFLVJTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBFQ0RIRS1SU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBESEUtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIERIRS1SU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMTI4LVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMTI4LVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMxMjgtU0hBXG5cbiAgICAtIEVDREhFLVJTQS1BRVMxMjgtU0hBXG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzI1Ni1TSEEzODRcblxuICAgIC0gRUNESEUtUlNBLUFFUzI1Ni1TSEEzODRcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMjU2LVNIQVxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMjU2LVNIQVxuXG4gICAgLSBESEUtUlNBLUFFUzEyOC1TSEEyNTZcblxuICAgIC0gREhFLVJTQS1BRVMyNTYtU0hBMjU2XG5cbiAgICAtIEFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIEFFUzEyOC1TSEEyNTZcblxuICAgIC0gQUVTMjU2LVNIQTI1NlxuXG4gICAgLSBBRVMxMjgtU0hBXG5cbiAgICAtIEFFUzI1Ni1TSEFcblxuICAgIC0gREVTLUNCQzMtU0hBXG5cbiAgbWluVExTVmVyc2lvbjogVmVyc2lvblRMUzEwIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJvYmplY3QifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgaXMgb25lIG9mIE9sZCwgSW50ZXJtZWRpYXRlLCBNb2Rlcm4gb3IgQ3VzdG9tLiBDdXN0b20gcHJvdmlkZXNcbnRoZSBhYmlsaXR5IHRvIHNwZWNpZnkgaW5kaXZpZHVhbCBUTFMgc2VjdXJpdHkgcHJvZmlsZSBwYXJhbWV0ZXJzLlxuT2xkLCBJbnRlcm1lZGlhdGUgYW5kIE1vZGVybiBhcmUgVExTIHNlY3VyaXR5IHByb2ZpbGVzIGJhc2VkIG9uOlxuXG5odHRwczovL3dpa2kubW96aWxsYS5vcmcvU2VjdXJpdHkvU2VydmVyX1NpZGVfVExTI1JlY29tbWVuZGVkX2NvbmZpZ3VyYXRpb25zXG5cblRoZSBwcm9maWxlcyBhcmUgaW50ZW50IGJhc2VkLCBzbyB0aGV5IG1heSBjaGFuZ2Ugb3ZlciB0aW1lIGFzIG5ldyBjaXBoZXJzIGFyZSBkZXZlbG9wZWQgYW5kIGV4aXN0aW5nIGNpcGhlcnNcbmFyZSBmb3VuZCB0byBiZSBpbnNlY3VyZS4gIERlcGVuZGluZyBvbiBwcmVjaXNlbHkgd2hpY2ggY2lwaGVycyBhcmUgYXZhaWxhYmxlIHRvIGEgcHJvY2VzcywgdGhlIGxpc3QgbWF5IGJlXG5yZWR1Y2VkLlxuXG5Ob3RlIHRoYXQgdGhlIE1vZGVybiBwcm9maWxlIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkIGJlY2F1c2UgaXQgaXMgbm90XG55ZXQgd2VsbCBhZG9wdGVkIGJ5IGNvbW1vbiBzb2Z0d2FyZSBsaWJyYXJpZXMuIiwiZW51bSI6WyJPbGQiLCJJbnRlcm1lZGlhdGUiLCJNb2Rlcm4iLCJDdXN0b20iXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiUHJvdmlkZXIgdHlwZSIsImVudW0iOlsiYXp1cmVfb3BlbmFpIiwiYmFtIiwib3BlbmFpIiwid2F0c29ueCIsInJob2FpX3ZsbG0iLCJyaGVsYWlfdmxsbSIsImZha2VfcHJvdmlkZXIiXSwidHlwZSI6InN0cmluZyJ9LCJ1cmwiOnsiZGVzY3JpcHRpb24iOiJQcm92aWRlciBBUEkgVVJMIiwicGF0dGVybiI6Il5odHRwcz86Ly8uKiQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJjcmVkZW50aWFsc1NlY3JldFJlZiIsIm1vZGVscyIsIm5hbWUiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtdmFsaWRhdGlvbnMiOlt7Im1lc3NhZ2UiOiInZGVwbG95bWVudE5hbWUnIG11c3QgYmUgc3BlY2lmaWVkIGZvciAnYXp1cmVfb3BlbmFpJyBwcm92aWRlciIsInJ1bGUiOiJzZWxmLnR5cGUgIT0gXCJhenVyZV9vcGVuYWlcIiB8fCBzZWxmLmRlcGxveW1lbnROYW1lICE9IFwiXCIifSx7Im1lc3NhZ2UiOiIncHJvamVjdElEJyBtdXN0IGJlIHNwZWNpZmllZCBmb3IgJ3dhdHNvbngnIHByb3ZpZGVyIiwicnVsZSI6InNlbGYudHlwZSAhPSBcIndhdHNvbnhcIiB8fCBzZWxmLnByb2plY3RJRCAhPSBcIlwiIn1dfSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJwcm92aWRlcnMiXSwidHlwZSI6Im9iamVjdCJ9LCJtY3BTZXJ2ZXJzIjp7ImRlc2NyaXB0aW9uIjoiTUNQIFNlcnZlciBzZXR0aW5ncyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTUNQU2VydmVyIGRlZmluZXMgdGhlIHNldHRpbmdzIGZvciBhIHNpbmdsZSBNQ1Agc2VydmVyLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIE1DUCBzZXJ2ZXIiLCJ0eXBlIjoic3RyaW5nIn0sInN0cmVhbWFibGVIVFRQIjp7ImRlc2NyaXB0aW9uIjoiU3RyZWFtYWJsZSBIVFRQIFRyYW5zcG9ydCBzZXR0aW5ncyIsInByb3BlcnRpZXMiOnsiZW5hYmxlU1NFIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkVuYWJsZSBTZXJ2ZXIgU2VudCBFdmVudHMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoZWFkZXJzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIZWFkZXJzIHRvIHNlbmQgdG8gdGhlIE1DUCBzZXJ2ZXIiLCJ0eXBlIjoib2JqZWN0In0sInNzZVJlYWRUaW1lb3V0Ijp7ImRlZmF1bHQiOjEwLCJkZXNjcmlwdGlvbiI6IlNTRSBSZWFkIFRpbWVvdXQsIGRlZmF1bHQgaXMgMTAgc2Vjb25kcyIsInR5cGUiOiJpbnRlZ2VyIn0sInRpbWVvdXQiOnsiZGVmYXVsdCI6NSwiZGVzY3JpcHRpb24iOiJUaW1lb3V0IGZvciB0aGUgTUNQIHNlcnZlciwgZGVmYXVsdCBpcyA1IHNlY29uZHMiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ1cmwiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIE1DUCBzZXJ2ZXIiLCJwYXR0ZXJuIjoiXmh0dHBzPzovLy4qJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInVybCJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9scyI6eyJkZXNjcmlwdGlvbiI6Ik9MU1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBPTFMgZGVwbG95bWVudC4iLCJwcm9wZXJ0aWVzIjp7ImFkZGl0aW9uYWxDQUNvbmZpZ01hcFJlZiI6eyJkZXNjcmlwdGlvbiI6IkFkZGl0aW9uYWwgQ0EgY2VydGlmaWNhdGVzIGZvciBUTFMgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIE9MUyBzZXJ2aWNlIGFuZCBMTE0gUHJvdmlkZXIiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5UaGlzIGZpZWxkIGlzIGVmZmVjdGl2ZWx5IHJlcXVpcmVkLCBidXQgZHVlIHRvIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGlzXG5hbGxvd2VkIHRvIGJlIGVtcHR5LiBJbnN0YW5jZXMgb2YgdGhpcyB0eXBlIHdpdGggYW4gZW1wdHkgdmFsdWUgaGVyZSBhcmVcbmFsbW9zdCBjZXJ0YWlubHkgd3JvbmcuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwiY29udmVyc2F0aW9uQ2FjaGUiOnsiZGVzY3JpcHRpb24iOiJDb252ZXJzYXRpb24gY2FjaGUgc2V0dGluZ3MiLCJwcm9wZXJ0aWVzIjp7InBvc3RncmVzIjp7ImRlc2NyaXB0aW9uIjoiUG9zdGdyZXNTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUG9zdGdyZXMuIiwicHJvcGVydGllcyI6eyJjcmVkZW50aWFsc1NlY3JldCI6eyJkZWZhdWx0IjoibGlnaHRzcGVlZC1wb3N0Z3Jlcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IlNlY3JldCB0aGF0IGhvbGRzIHBvc3RncmVzIGNyZWRlbnRpYWxzIiwidHlwZSI6InN0cmluZyJ9LCJkYk5hbWUiOnsiZGVmYXVsdCI6InBvc3RncmVzIiwiZGVzY3JpcHRpb24iOiJQb3N0Z3JlcyBkYXRhYmFzZSBuYW1lIiwidHlwZSI6InN0cmluZyJ9LCJtYXhDb25uZWN0aW9ucyI6eyJkZWZhdWx0IjoyMDAwLCJkZXNjcmlwdGlvbiI6IlBvc3RncmVzIG1heGNvbm5lY3Rpb25zLiBEZWZhdWx0OiBcIjIwMDBcIiIsIm1heGltdW0iOjI2MjE0MywibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwic2hhcmVkQnVmZmVycyI6eyJkZWZhdWx0IjoiMjU2TUIiLCJkZXNjcmlwdGlvbiI6IlBvc3RncmVzIHNoYXJlZGJ1ZmZlcnMiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ1c2VyIjp7ImRlZmF1bHQiOiJwb3N0Z3JlcyIsImRlc2NyaXB0aW9uIjoiUG9zdGdyZXMgdXNlciBuYW1lIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlZmF1bHQiOiJwb3N0Z3JlcyIsImRlc2NyaXB0aW9uIjoiQ29udmVyc2F0aW9uIGNhY2hlIHR5cGUuIERlZmF1bHQ6IFwicG9zdGdyZXNcIiIsImVudW0iOlsicG9zdGdyZXMiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZWZhdWx0TW9kZWwiOnsiZGVzY3JpcHRpb24iOiJEZWZhdWx0IG1vZGVsIGZvciB1c2FnZSIsInR5cGUiOiJzdHJpbmcifSwiZGVmYXVsdFByb3ZpZGVyIjp7ImRlc2NyaXB0aW9uIjoiRGVmYXVsdCBwcm92aWRlciBmb3IgdXNhZ2UiLCJ0eXBlIjoic3RyaW5nIn0sImRlcGxveW1lbnQiOnsiZGVzY3JpcHRpb24iOiJPTFMgZGVwbG95bWVudCBzZXR0aW5ncyIsInByb3BlcnRpZXMiOnsiYXBpIjp7ImRlc2NyaXB0aW9uIjoiQVBJIGNvbnRhaW5lciBzZXR0aW5ncy4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImNsYWltcyI6eyJkZXNjcmlwdGlvbiI6IkNsYWltcyBsaXN0cyB0aGUgbmFtZXMgb2YgcmVzb3VyY2VzLCBkZWZpbmVkIGluIHNwZWMucmVzb3VyY2VDbGFpbXMsXG50aGF0IGFyZSB1c2VkIGJ5IHRoaXMgY29udGFpbmVyLlxuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyB0aGVcbkR5bmFtaWNSZXNvdXJjZUFsbG9jYXRpb24gZmVhdHVyZSBnYXRlLlxuXG5UaGlzIGZpZWxkIGlzIGltbXV0YWJsZS4gSXQgY2FuIG9ubHkgYmUgc2V0IGZvciBjb250YWluZXJzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VDbGFpbSByZWZlcmVuY2VzIG9uZSBlbnRyeSBpbiBQb2RTcGVjLlJlc291cmNlQ2xhaW1zLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgbXVzdCBtYXRjaCB0aGUgbmFtZSBvZiBvbmUgZW50cnkgaW4gcG9kLnNwZWMucmVzb3VyY2VDbGFpbXMgb2ZcbnRoZSBQb2Qgd2hlcmUgdGhpcyBmaWVsZCBpcyB1c2VkLiBJdCBtYWtlcyB0aGF0IHJlc291cmNlIGF2YWlsYWJsZVxuaW5zaWRlIGEgY29udGFpbmVyLiIsInR5cGUiOiJzdHJpbmcifSwicmVxdWVzdCI6eyJkZXNjcmlwdGlvbiI6IlJlcXVlc3QgaXMgdGhlIG5hbWUgY2hvc2VuIGZvciBhIHJlcXVlc3QgaW4gdGhlIHJlZmVyZW5jZWQgY2xhaW0uXG5JZiBlbXB0eSwgZXZlcnl0aGluZyBmcm9tIHRoZSBjbGFpbSBpcyBtYWRlIGF2YWlsYWJsZSwgb3RoZXJ3aXNlXG5vbmx5IHRoZSByZXN1bHQgb2YgdGhpcyByZXF1ZXN0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJuYW1lIl0sIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJtYXAifSwibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC5cbklmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCxcbm90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBSZXF1ZXN0cyBjYW5ub3QgZXhjZWVkIExpbWl0cy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0b2xlcmF0aW9ucyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwb2QgdGhpcyBUb2xlcmF0aW9uIGlzIGF0dGFjaGVkIHRvIHRvbGVyYXRlcyBhbnkgdGFpbnQgdGhhdCBtYXRjaGVzXG50aGUgdHJpcGxlIFx1MDAzY2tleSx2YWx1ZSxlZmZlY3RcdTAwM2UgdXNpbmcgdGhlIG1hdGNoaW5nIG9wZXJhdG9yIFx1MDAzY29wZXJhdG9yXHUwMDNlLiIsInByb3BlcnRpZXMiOnsiZWZmZWN0Ijp7ImRlc2NyaXB0aW9uIjoiRWZmZWN0IGluZGljYXRlcyB0aGUgdGFpbnQgZWZmZWN0IHRvIG1hdGNoLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQgZWZmZWN0cy5cbldoZW4gc3BlY2lmaWVkLCBhbGxvd2VkIHZhbHVlcyBhcmUgTm9TY2hlZHVsZSwgUHJlZmVyTm9TY2hlZHVsZSBhbmQgTm9FeGVjdXRlLiIsInR5cGUiOiJzdHJpbmcifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IGlzIHRoZSB0YWludCBrZXkgdGhhdCB0aGUgdG9sZXJhdGlvbiBhcHBsaWVzIHRvLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQga2V5cy5cbklmIHRoZSBrZXkgaXMgZW1wdHksIG9wZXJhdG9yIG11c3QgYmUgRXhpc3RzOyB0aGlzIGNvbWJpbmF0aW9uIG1lYW5zIHRvIG1hdGNoIGFsbCB2YWx1ZXMgYW5kIGFsbCBrZXlzLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIHRoZSB2YWx1ZS5cblZhbGlkIG9wZXJhdG9ycyBhcmUgRXhpc3RzIGFuZCBFcXVhbC4gRGVmYXVsdHMgdG8gRXF1YWwuXG5FeGlzdHMgaXMgZXF1aXZhbGVudCB0byB3aWxkY2FyZCBmb3IgdmFsdWUsIHNvIHRoYXQgYSBwb2QgY2FuXG50b2xlcmF0ZSBhbGwgdGFpbnRzIG9mIGEgcGFydGljdWxhciBjYXRlZ29yeS4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25TZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvblNlY29uZHMgcmVwcmVzZW50cyB0aGUgcGVyaW9kIG9mIHRpbWUgdGhlIHRvbGVyYXRpb24gKHdoaWNoIG11c3QgYmVcbm9mIGVmZmVjdCBOb0V4ZWN1dGUsIG90aGVyd2lzZSB0aGlzIGZpZWxkIGlzIGlnbm9yZWQpIHRvbGVyYXRlcyB0aGUgdGFpbnQuIEJ5IGRlZmF1bHQsXG5pdCBpcyBub3Qgc2V0LCB3aGljaCBtZWFucyB0b2xlcmF0ZSB0aGUgdGFpbnQgZm9yZXZlciAoZG8gbm90IGV2aWN0KS4gWmVybyBhbmRcbm5lZ2F0aXZlIHZhbHVlcyB3aWxsIGJlIHRyZWF0ZWQgYXMgMCAoZXZpY3QgaW1tZWRpYXRlbHkpIGJ5IHRoZSBzeXN0ZW0uIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIGlzIHRoZSB0YWludCB2YWx1ZSB0aGUgdG9sZXJhdGlvbiBtYXRjaGVzIHRvLlxuSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cywgdGhlIHZhbHVlIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGp1c3QgYSByZWd1bGFyIHN0cmluZy4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjb25zb2xlIjp7ImRlc2NyaXB0aW9uIjoiQ29uc29sZSBjb250YWluZXIgc2V0dGluZ3MuIiwicHJvcGVydGllcyI6eyJjYUNlcnRpZmljYXRlIjp7ImRlc2NyaXB0aW9uIjoiQ2VydGlmaWNhdGUgQXV0aG9yaXR5IChDQSkgY2VydGlmaWNhdGUgdXNlZCBieSB0aGUgY29uc29sZSBwcm94eSBlbmRwb2ludC4iLCJwYXR0ZXJuIjoiXi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLShbXFxzXFxTXSopLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxccz8kIiwidHlwZSI6InN0cmluZyJ9LCJub2RlU2VsZWN0b3IiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoib2JqZWN0In0sInJlcGxpY2FzIjp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgbnVtYmVyIG9mIGRlc2lyZWQgQ29uc29sZSBwb2RzLiBEZWZhdWx0OiBcIjFcIiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImNsYWltcyI6eyJkZXNjcmlwdGlvbiI6IkNsYWltcyBsaXN0cyB0aGUgbmFtZXMgb2YgcmVzb3VyY2VzLCBkZWZpbmVkIGluIHNwZWMucmVzb3VyY2VDbGFpbXMsXG50aGF0IGFyZSB1c2VkIGJ5IHRoaXMgY29udGFpbmVyLlxuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyB0aGVcbkR5bmFtaWNSZXNvdXJjZUFsbG9jYXRpb24gZmVhdHVyZSBnYXRlLlxuXG5UaGlzIGZpZWxkIGlzIGltbXV0YWJsZS4gSXQgY2FuIG9ubHkgYmUgc2V0IGZvciBjb250YWluZXJzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VDbGFpbSByZWZlcmVuY2VzIG9uZSBlbnRyeSBpbiBQb2RTcGVjLlJlc291cmNlQ2xhaW1zLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgbXVzdCBtYXRjaCB0aGUgbmFtZSBvZiBvbmUgZW50cnkgaW4gcG9kLnNwZWMucmVzb3VyY2VDbGFpbXMgb2ZcbnRoZSBQb2Qgd2hlcmUgdGhpcyBmaWVsZCBpcyB1c2VkLiBJdCBtYWtlcyB0aGF0IHJlc291cmNlIGF2YWlsYWJsZVxuaW5zaWRlIGEgY29udGFpbmVyLiIsInR5cGUiOiJzdHJpbmcifSwicmVxdWVzdCI6eyJkZXNjcmlwdGlvbiI6IlJlcXVlc3QgaXMgdGhlIG5hbWUgY2hvc2VuIGZvciBhIHJlcXVlc3QgaW4gdGhlIHJlZmVyZW5jZWQgY2xhaW0uXG5JZiBlbXB0eSwgZXZlcnl0aGluZyBmcm9tIHRoZSBjbGFpbSBpcyBtYWRlIGF2YWlsYWJsZSwgb3RoZXJ3aXNlXG5vbmx5IHRoZSByZXN1bHQgb2YgdGhpcyByZXF1ZXN0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJuYW1lIl0sIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJtYXAifSwibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC5cbklmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCxcbm90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBSZXF1ZXN0cyBjYW5ub3QgZXhjZWVkIExpbWl0cy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0b2xlcmF0aW9ucyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwb2QgdGhpcyBUb2xlcmF0aW9uIGlzIGF0dGFjaGVkIHRvIHRvbGVyYXRlcyBhbnkgdGFpbnQgdGhhdCBtYXRjaGVzXG50aGUgdHJpcGxlIFx1MDAzY2tleSx2YWx1ZSxlZmZlY3RcdTAwM2UgdXNpbmcgdGhlIG1hdGNoaW5nIG9wZXJhdG9yIFx1MDAzY29wZXJhdG9yXHUwMDNlLiIsInByb3BlcnRpZXMiOnsiZWZmZWN0Ijp7ImRlc2NyaXB0aW9uIjoiRWZmZWN0IGluZGljYXRlcyB0aGUgdGFpbnQgZWZmZWN0IHRvIG1hdGNoLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQgZWZmZWN0cy5cbldoZW4gc3BlY2lmaWVkLCBhbGxvd2VkIHZhbHVlcyBhcmUgTm9TY2hlZHVsZSwgUHJlZmVyTm9TY2hlZHVsZSBhbmQgTm9FeGVjdXRlLiIsInR5cGUiOiJzdHJpbmcifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IGlzIHRoZSB0YWludCBrZXkgdGhhdCB0aGUgdG9sZXJhdGlvbiBhcHBsaWVzIHRvLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQga2V5cy5cbklmIHRoZSBrZXkgaXMgZW1wdHksIG9wZXJhdG9yIG11c3QgYmUgRXhpc3RzOyB0aGlzIGNvbWJpbmF0aW9uIG1lYW5zIHRvIG1hdGNoIGFsbCB2YWx1ZXMgYW5kIGFsbCBrZXlzLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIHRoZSB2YWx1ZS5cblZhbGlkIG9wZXJhdG9ycyBhcmUgRXhpc3RzIGFuZCBFcXVhbC4gRGVmYXVsdHMgdG8gRXF1YWwuXG5FeGlzdHMgaXMgZXF1aXZhbGVudCB0byB3aWxkY2FyZCBmb3IgdmFsdWUsIHNvIHRoYXQgYSBwb2QgY2FuXG50b2xlcmF0ZSBhbGwgdGFpbnRzIG9mIGEgcGFydGljdWxhciBjYXRlZ29yeS4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25TZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvblNlY29uZHMgcmVwcmVzZW50cyB0aGUgcGVyaW9kIG9mIHRpbWUgdGhlIHRvbGVyYXRpb24gKHdoaWNoIG11c3QgYmVcbm9mIGVmZmVjdCBOb0V4ZWN1dGUsIG90aGVyd2lzZSB0aGlzIGZpZWxkIGlzIGlnbm9yZWQpIHRvbGVyYXRlcyB0aGUgdGFpbnQuIEJ5IGRlZmF1bHQsXG5pdCBpcyBub3Qgc2V0LCB3aGljaCBtZWFucyB0b2xlcmF0ZSB0aGUgdGFpbnQgZm9yZXZlciAoZG8gbm90IGV2aWN0KS4gWmVybyBhbmRcbm5lZ2F0aXZlIHZhbHVlcyB3aWxsIGJlIHRyZWF0ZWQgYXMgMCAoZXZpY3QgaW1tZWRpYXRlbHkpIGJ5IHRoZSBzeXN0ZW0uIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIGlzIHRoZSB0YWludCB2YWx1ZSB0aGUgdG9sZXJhdGlvbiBtYXRjaGVzIHRvLlxuSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cywgdGhlIHZhbHVlIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGp1c3QgYSByZWd1bGFyIHN0cmluZy4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkYXRhQ29sbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiRGF0YSBDb2xsZWN0b3IgY29udGFpbmVyIHNldHRpbmdzLiIsInByb3BlcnRpZXMiOnsicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImNsYWltcyI6eyJkZXNjcmlwdGlvbiI6IkNsYWltcyBsaXN0cyB0aGUgbmFtZXMgb2YgcmVzb3VyY2VzLCBkZWZpbmVkIGluIHNwZWMucmVzb3VyY2VDbGFpbXMsXG50aGF0IGFyZSB1c2VkIGJ5IHRoaXMgY29udGFpbmVyLlxuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyB0aGVcbkR5bmFtaWNSZXNvdXJjZUFsbG9jYXRpb24gZmVhdHVyZSBnYXRlLlxuXG5UaGlzIGZpZWxkIGlzIGltbXV0YWJsZS4gSXQgY2FuIG9ubHkgYmUgc2V0IGZvciBjb250YWluZXJzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VDbGFpbSByZWZlcmVuY2VzIG9uZSBlbnRyeSBpbiBQb2RTcGVjLlJlc291cmNlQ2xhaW1zLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgbXVzdCBtYXRjaCB0aGUgbmFtZSBvZiBvbmUgZW50cnkgaW4gcG9kLnNwZWMucmVzb3VyY2VDbGFpbXMgb2ZcbnRoZSBQb2Qgd2hlcmUgdGhpcyBmaWVsZCBpcyB1c2VkLiBJdCBtYWtlcyB0aGF0IHJlc291cmNlIGF2YWlsYWJsZVxuaW5zaWRlIGEgY29udGFpbmVyLiIsInR5cGUiOiJzdHJpbmcifSwicmVxdWVzdCI6eyJkZXNjcmlwdGlvbiI6IlJlcXVlc3QgaXMgdGhlIG5hbWUgY2hvc2VuIGZvciBhIHJlcXVlc3QgaW4gdGhlIHJlZmVyZW5jZWQgY2xhaW0uXG5JZiBlbXB0eSwgZXZlcnl0aGluZyBmcm9tIHRoZSBjbGFpbSBpcyBtYWRlIGF2YWlsYWJsZSwgb3RoZXJ3aXNlXG5vbmx5IHRoZSByZXN1bHQgb2YgdGhpcyByZXF1ZXN0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJuYW1lIl0sIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJtYXAifSwibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC5cbklmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCxcbm90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBSZXF1ZXN0cyBjYW5ub3QgZXhjZWVkIExpbWl0cy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkYXRhYmFzZSI6eyJkZXNjcmlwdGlvbiI6IkRhdGFiYXNlIGNvbnRhaW5lciBzZXR0aW5ncy4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImNsYWltcyI6eyJkZXNjcmlwdGlvbiI6IkNsYWltcyBsaXN0cyB0aGUgbmFtZXMgb2YgcmVzb3VyY2VzLCBkZWZpbmVkIGluIHNwZWMucmVzb3VyY2VDbGFpbXMsXG50aGF0IGFyZSB1c2VkIGJ5IHRoaXMgY29udGFpbmVyLlxuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyB0aGVcbkR5bmFtaWNSZXNvdXJjZUFsbG9jYXRpb24gZmVhdHVyZSBnYXRlLlxuXG5UaGlzIGZpZWxkIGlzIGltbXV0YWJsZS4gSXQgY2FuIG9ubHkgYmUgc2V0IGZvciBjb250YWluZXJzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VDbGFpbSByZWZlcmVuY2VzIG9uZSBlbnRyeSBpbiBQb2RTcGVjLlJlc291cmNlQ2xhaW1zLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgbXVzdCBtYXRjaCB0aGUgbmFtZSBvZiBvbmUgZW50cnkgaW4gcG9kLnNwZWMucmVzb3VyY2VDbGFpbXMgb2ZcbnRoZSBQb2Qgd2hlcmUgdGhpcyBmaWVsZCBpcyB1c2VkLiBJdCBtYWtlcyB0aGF0IHJlc291cmNlIGF2YWlsYWJsZVxuaW5zaWRlIGEgY29udGFpbmVyLiIsInR5cGUiOiJzdHJpbmcifSwicmVxdWVzdCI6eyJkZXNjcmlwdGlvbiI6IlJlcXVlc3QgaXMgdGhlIG5hbWUgY2hvc2VuIGZvciBhIHJlcXVlc3QgaW4gdGhlIHJlZmVyZW5jZWQgY2xhaW0uXG5JZiBlbXB0eSwgZXZlcnl0aGluZyBmcm9tIHRoZSBjbGFpbSBpcyBtYWRlIGF2YWlsYWJsZSwgb3RoZXJ3aXNlXG5vbmx5IHRoZSByZXN1bHQgb2YgdGhpcyByZXF1ZXN0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJuYW1lIl0sIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJtYXAifSwibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC5cbklmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCxcbm90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBSZXF1ZXN0cyBjYW5ub3QgZXhjZWVkIExpbWl0cy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0b2xlcmF0aW9ucyI6eyJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwb2QgdGhpcyBUb2xlcmF0aW9uIGlzIGF0dGFjaGVkIHRvIHRvbGVyYXRlcyBhbnkgdGFpbnQgdGhhdCBtYXRjaGVzXG50aGUgdHJpcGxlIFx1MDAzY2tleSx2YWx1ZSxlZmZlY3RcdTAwM2UgdXNpbmcgdGhlIG1hdGNoaW5nIG9wZXJhdG9yIFx1MDAzY29wZXJhdG9yXHUwMDNlLiIsInByb3BlcnRpZXMiOnsiZWZmZWN0Ijp7ImRlc2NyaXB0aW9uIjoiRWZmZWN0IGluZGljYXRlcyB0aGUgdGFpbnQgZWZmZWN0IHRvIG1hdGNoLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQgZWZmZWN0cy5cbldoZW4gc3BlY2lmaWVkLCBhbGxvd2VkIHZhbHVlcyBhcmUgTm9TY2hlZHVsZSwgUHJlZmVyTm9TY2hlZHVsZSBhbmQgTm9FeGVjdXRlLiIsInR5cGUiOiJzdHJpbmcifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IGlzIHRoZSB0YWludCBrZXkgdGhhdCB0aGUgdG9sZXJhdGlvbiBhcHBsaWVzIHRvLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQga2V5cy5cbklmIHRoZSBrZXkgaXMgZW1wdHksIG9wZXJhdG9yIG11c3QgYmUgRXhpc3RzOyB0aGlzIGNvbWJpbmF0aW9uIG1lYW5zIHRvIG1hdGNoIGFsbCB2YWx1ZXMgYW5kIGFsbCBrZXlzLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIHRoZSB2YWx1ZS5cblZhbGlkIG9wZXJhdG9ycyBhcmUgRXhpc3RzIGFuZCBFcXVhbC4gRGVmYXVsdHMgdG8gRXF1YWwuXG5FeGlzdHMgaXMgZXF1aXZhbGVudCB0byB3aWxkY2FyZCBmb3IgdmFsdWUsIHNvIHRoYXQgYSBwb2QgY2FuXG50b2xlcmF0ZSBhbGwgdGFpbnRzIG9mIGEgcGFydGljdWxhciBjYXRlZ29yeS4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25TZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvblNlY29uZHMgcmVwcmVzZW50cyB0aGUgcGVyaW9kIG9mIHRpbWUgdGhlIHRvbGVyYXRpb24gKHdoaWNoIG11c3QgYmVcbm9mIGVmZmVjdCBOb0V4ZWN1dGUsIG90aGVyd2lzZSB0aGlzIGZpZWxkIGlzIGlnbm9yZWQpIHRvbGVyYXRlcyB0aGUgdGFpbnQuIEJ5IGRlZmF1bHQsXG5pdCBpcyBub3Qgc2V0LCB3aGljaCBtZWFucyB0b2xlcmF0ZSB0aGUgdGFpbnQgZm9yZXZlciAoZG8gbm90IGV2aWN0KS4gWmVybyBhbmRcbm5lZ2F0aXZlIHZhbHVlcyB3aWxsIGJlIHRyZWF0ZWQgYXMgMCAoZXZpY3QgaW1tZWRpYXRlbHkpIGJ5IHRoZSBzeXN0ZW0uIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIGlzIHRoZSB0YWludCB2YWx1ZSB0aGUgdG9sZXJhdGlvbiBtYXRjaGVzIHRvLlxuSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cywgdGhlIHZhbHVlIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGp1c3QgYSByZWd1bGFyIHN0cmluZy4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJtY3BTZXJ2ZXIiOnsiZGVzY3JpcHRpb24iOiJNQ1Agc2VydmVyIGNvbnRhaW5lciBzZXR0aW5ncy4iLCJwcm9wZXJ0aWVzIjp7InJlc291cmNlcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlUmVxdWlyZW1lbnRzIGRlc2NyaWJlcyB0aGUgY29tcHV0ZSByZXNvdXJjZSByZXF1aXJlbWVudHMuIiwicHJvcGVydGllcyI6eyJjbGFpbXMiOnsiZGVzY3JpcHRpb24iOiJDbGFpbXMgbGlzdHMgdGhlIG5hbWVzIG9mIHJlc291cmNlcywgZGVmaW5lZCBpbiBzcGVjLnJlc291cmNlQ2xhaW1zLFxudGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci5cblxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgdGhlXG5EeW5hbWljUmVzb3VyY2VBbGxvY2F0aW9uIGZlYXR1cmUgZ2F0ZS5cblxuVGhpcyBmaWVsZCBpcyBpbW11dGFibGUuIEl0IGNhbiBvbmx5IGJlIHNldCBmb3IgY29udGFpbmVycy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlQ2xhaW0gcmVmZXJlbmNlcyBvbmUgZW50cnkgaW4gUG9kU3BlYy5SZXNvdXJjZUNsYWltcy4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgbWF0Y2ggdGhlIG5hbWUgb2Ygb25lIGVudHJ5IGluIHBvZC5zcGVjLnJlc291cmNlQ2xhaW1zIG9mXG50aGUgUG9kIHdoZXJlIHRoaXMgZmllbGQgaXMgdXNlZC4gSXQgbWFrZXMgdGhhdCByZXNvdXJjZSBhdmFpbGFibGVcbmluc2lkZSBhIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn0sInJlcXVlc3QiOnsiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGlzIHRoZSBuYW1lIGNob3NlbiBmb3IgYSByZXF1ZXN0IGluIHRoZSByZWZlcmVuY2VkIGNsYWltLlxuSWYgZW1wdHksIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgY2xhaW0gaXMgbWFkZSBhdmFpbGFibGUsIG90aGVyd2lzZVxub25seSB0aGUgcmVzdWx0IG9mIHRoaXMgcmVxdWVzdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtbWFwLWtleXMiOlsibmFtZSJdLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoibWFwIn0sImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuXG5JZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsXG5vdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwicmVwbGljYXMiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBudW1iZXIgb2YgZGVzaXJlZCBPTFMgcG9kcy4gRGVmYXVsdDogXCIxXCIiLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sImludHJvc3BlY3Rpb25FbmFibGVkIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlIGludHJvc3BlY3Rpb24gZmVhdHVyZXMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJsb2dMZXZlbCI6eyJkZWZhdWx0IjoiSU5GTyIsImRlc2NyaXB0aW9uIjoiTG9nIGxldmVsLiBWYWxpZCBvcHRpb25zIGFyZSBERUJVRywgSU5GTywgV0FSTklORywgRVJST1IgYW5kIENSSVRJQ0FMLiBEZWZhdWx0OiBcIklORk9cIi4iLCJlbnVtIjpbIkRFQlVHIiwiSU5GTyIsIldBUk5JTkciLCJFUlJPUiIsIkNSSVRJQ0FMIl0sInR5cGUiOiJzdHJpbmcifSwicHJveHlDb25maWciOnsiZGVzY3JpcHRpb24iOiJQcm94eSBzZXR0aW5ncyBmb3IgY29ubmVjdGluZyB0byBleHRlcm5hbCBzZXJ2ZXJzLCBzdWNoIGFzIExMTSBwcm92aWRlcnMuIiwicHJvcGVydGllcyI6eyJwcm94eUNBQ2VydGlmaWNhdGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgY29uZmlnbWFwIGhvbGRpbmcgcHJveHkgQ0EgY2VydGlmaWNhdGUiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQuXG5UaGlzIGZpZWxkIGlzIGVmZmVjdGl2ZWx5IHJlcXVpcmVkLCBidXQgZHVlIHRvIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGlzXG5hbGxvd2VkIHRvIGJlIGVtcHR5LiBJbnN0YW5jZXMgb2YgdGhpcyB0eXBlIHdpdGggYW4gZW1wdHkgdmFsdWUgaGVyZSBhcmVcbmFsbW9zdCBjZXJ0YWlubHkgd3JvbmcuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL25hbWVzLyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwicHJveHlVUkwiOnsiZGVzY3JpcHRpb24iOiJQcm94eSBVUkwsIGUuZy4gaHR0cHM6Ly9wcm94eS5leGFtcGxlLmNvbTo4MDgwXG5JZiBub3Qgc3BlY2lmaWVkLCB0aGUgY2x1c3RlciB3aWRlIHByb3h5IHdpbGwgYmUgdXNlZCwgdGhvdWdoIGVudiB2YXIgXCJodHRwc19wcm94eVwiLiIsInBhdHRlcm4iOiJeaHR0cHM/Oi8vLiokIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJxdWVyeUZpbHRlcnMiOnsiZGVzY3JpcHRpb24iOiJRdWVyeSBmaWx0ZXJzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJRdWVyeUZpbHRlcnNTcGVjIGRlZmluZXMgZmlsdGVycyB0byBtYW5pcHVsYXRlIHF1ZXN0aW9ucy9xdWVyaWVzLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6IkZpbHRlciBuYW1lLiIsInR5cGUiOiJzdHJpbmcifSwicGF0dGVybiI6eyJkZXNjcmlwdGlvbiI6IkZpbHRlciBwYXR0ZXJuLiIsInR5cGUiOiJzdHJpbmcifSwicmVwbGFjZVdpdGgiOnsiZGVzY3JpcHRpb24iOiJSZXBsYWNlbWVudCBmb3IgdGhlIG1hdGNoZWQgcGF0dGVybi4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJxdW90YUhhbmRsZXJzQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiTExNIFRva2VuIFF1b3RhIENvbmZpZ3VyYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImVuYWJsZVRva2VuSGlzdG9yeSI6eyJkZXNjcmlwdGlvbiI6IkVuYWJsZSB0b2tlbiBoaXN0b3J5IiwidHlwZSI6ImJvb2xlYW4ifSwibGltaXRlcnNDb25maWciOnsiZGVzY3JpcHRpb24iOiJUb2tlbiBxdW90YSBsaW1pdGVycyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTGltaXRlckNvbmZpZyBkZWZpbmVzIHNldHRpbmdzIGZvciBhIHRva2VuIHF1b3RhIGxpbWl0ZXIiLCJwcm9wZXJ0aWVzIjp7ImluaXRpYWxRdW90YSI6eyJkZXNjcmlwdGlvbiI6IkluaXRpYWwgdmFsdWUgb2YgdGhlIHRva2VuIHF1b3RhIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGxpbWl0ZXIiLCJ0eXBlIjoic3RyaW5nIn0sInBlcmlvZCI6eyJkZXNjcmlwdGlvbiI6IlBlcmlvZCBvZiB0aW1lIHRoZSB0b2tlbiBxdW90YSBpcyBmb3IiLCJwYXR0ZXJuIjoiXigxXFxzKyhkYXl8bW9udGh8eWVhcnxkfG18eSl8KFsyLTldWzAtOV0qfFsxLTldWzAtOV17Mix9KVxccysoZGF5c3xtb250aHN8eWVhcnN8ZHxtfHkpKSQiLCJ0eXBlIjoic3RyaW5nIn0sInF1b3RhSW5jcmVhc2UiOnsiZGVzY3JpcHRpb24iOiJUb2tlbiBxdW90YSBpbmNyZWFzZSBzdGVwIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIGxpbWl0ZXIiLCJlbnVtIjpbImNsdXN0ZXJfbGltaXRlciIsInVzZXJfbGltaXRlciJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpbml0aWFsUXVvdGEiLCJuYW1lIiwicGVyaW9kIiwicXVvdGFJbmNyZWFzZSIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwicmFnIjp7ImRlc2NyaXB0aW9uIjoiUkFHIGRhdGFiYXNlcyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUkFHU3BlYyBkZWZpbmVzIGhvdyB0byByZXRyaWV2ZSBhIFJBRyBkYXRhYmFzZXMuIiwicHJvcGVydGllcyI6eyJpbWFnZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBVUkwgb2YgdGhlIGNvbnRhaW5lciBpbWFnZSB0byB1c2UgYXMgYSBSQUcgc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJpbmRleElEIjp7ImRlZmF1bHQiOiJ2ZWN0b3JfZGJfaW5kZXgiLCJkZXNjcmlwdGlvbiI6IlRoZSBJbmRleCBJRCBvZiB0aGUgUkFHIGRhdGFiYXNlIiwidHlwZSI6InN0cmluZyJ9LCJpbmRleFBhdGgiOnsiZGVmYXVsdCI6Ii9yYWcvdmVjdG9yX2RiIiwiZGVzY3JpcHRpb24iOiJUaGUgcGF0aCB0byB0aGUgUkFHIGRhdGFiYXNlIGluc2lkZSBvZiB0aGUgY29udGFpbmVyIGltYWdlIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwic3RvcmFnZSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNpc3RlbnQgU3RvcmFnZSBDb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJjbGFzcyI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2UgY2xhc3Mgb2YgdGhlIHJlcXVlc3RlZCB2b2x1bWUiLCJ0eXBlIjoic3RyaW5nIn0sInNpemUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6IlNpemUgb2YgdGhlIHJlcXVlc3RlZCB2b2x1bWUiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In0sInRsc0NvbmZpZyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjb25maWd1cmF0aW9uIG9mIHRoZSBMaWdodHNwZWVkIGJhY2tlbmQncyBIVFRQUyBlbmRwb2ludCIsInByb3BlcnRpZXMiOnsia2V5Q2VydFNlY3JldFJlZiI6eyJkZXNjcmlwdGlvbiI6IktleVNlY3JldFJlZiBpcyB0aGUgc2VjcmV0IHRoYXQgaG9sZHMgdGhlIFRMUyBrZXkuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlZmVyZW50LlxuVGhpcyBmaWVsZCBpcyBlZmZlY3RpdmVseSByZXF1aXJlZCwgYnV0IGR1ZSB0byBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBpc1xuYWxsb3dlZCB0byBiZSBlbXB0eS4gSW5zdGFuY2VzIG9mIHRoaXMgdHlwZSB3aXRoIGFuIGVtcHR5IHZhbHVlIGhlcmUgYXJlXG5hbG1vc3QgY2VydGFpbmx5IHdyb25nLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInRsc1NlY3VyaXR5UHJvZmlsZSI6eyJkZXNjcmlwdGlvbiI6IlRMUyBTZWN1cml0eSBQcm9maWxlIHVzZWQgYnkgQVBJIGVuZHBvaW50cyIsInByb3BlcnRpZXMiOnsiY3VzdG9tIjp7ImRlc2NyaXB0aW9uIjoiY3VzdG9tIGlzIGEgdXNlci1kZWZpbmVkIFRMUyBzZWN1cml0eSBwcm9maWxlLiBCZSBleHRyZW1lbHkgY2FyZWZ1bCB1c2luZyBhIGN1c3RvbVxucHJvZmlsZSBhcyBpbnZhbGlkIGNvbmZpZ3VyYXRpb25zIGNhbiBiZSBjYXRhc3Ryb3BoaWMuIEFuIGV4YW1wbGUgY3VzdG9tIHByb2ZpbGVcbmxvb2tzIGxpa2UgdGhpczpcblxuICBjaXBoZXJzOlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBFQ0RIRS1SU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gRUNESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgbWluVExTVmVyc2lvbjogVmVyc2lvblRMUzExIiwibnVsbGFibGUiOnRydWUsInByb3BlcnRpZXMiOnsiY2lwaGVycyI6eyJkZXNjcmlwdGlvbiI6ImNpcGhlcnMgaXMgdXNlZCB0byBzcGVjaWZ5IHRoZSBjaXBoZXIgYWxnb3JpdGhtcyB0aGF0IGFyZSBuZWdvdGlhdGVkXG5kdXJpbmcgdGhlIFRMUyBoYW5kc2hha2UuICBPcGVyYXRvcnMgbWF5IHJlbW92ZSBlbnRyaWVzIHRoZWlyIG9wZXJhbmRzXG5kbyBub3Qgc3VwcG9ydC4gIEZvciBleGFtcGxlLCB0byB1c2UgREVTLUNCQzMtU0hBICAoeWFtbCk6XG5cbiAgY2lwaGVyczpcbiAgICAtIERFUy1DQkMzLVNIQSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sIm1pblRMU1ZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJtaW5UTFNWZXJzaW9uIGlzIHVzZWQgdG8gc3BlY2lmeSB0aGUgbWluaW1hbCB2ZXJzaW9uIG9mIHRoZSBUTFMgcHJvdG9jb2xcbnRoYXQgaXMgbmVnb3RpYXRlZCBkdXJpbmcgdGhlIFRMUyBoYW5kc2hha2UuIEZvciBleGFtcGxlLCB0byB1c2UgVExTXG52ZXJzaW9ucyAxLjEsIDEuMiBhbmQgMS4zICh5YW1sKTpcblxuICBtaW5UTFNWZXJzaW9uOiBWZXJzaW9uVExTMTFcblxuTk9URTogY3VycmVudGx5IHRoZSBoaWdoZXN0IG1pblRMU1ZlcnNpb24gYWxsb3dlZCBpcyBWZXJzaW9uVExTMTIiLCJlbnVtIjpbIlZlcnNpb25UTFMxMCIsIlZlcnNpb25UTFMxMSIsIlZlcnNpb25UTFMxMiIsIlZlcnNpb25UTFMxMyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImludGVybWVkaWF0ZSI6eyJkZXNjcmlwdGlvbiI6ImludGVybWVkaWF0ZSBpcyBhIFRMUyBzZWN1cml0eSBwcm9maWxlIGJhc2VkIG9uOlxuXG5odHRwczovL3dpa2kubW96aWxsYS5vcmcvU2VjdXJpdHkvU2VydmVyX1NpZGVfVExTI0ludGVybWVkaWF0ZV9jb21wYXRpYmlsaXR5Xy4yOHJlY29tbWVuZGVkLjI5XG5cbmFuZCBsb29rcyBsaWtlIHRoaXMgKHlhbWwpOlxuXG4gIGNpcGhlcnM6XG5cbiAgICAtIFRMU19BRVNfMTI4X0dDTV9TSEEyNTZcblxuICAgIC0gVExTX0FFU18yNTZfR0NNX1NIQTM4NFxuXG4gICAgLSBUTFNfQ0hBQ0hBMjBfUE9MWTEzMDVfU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEVDREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMjU2LUdDTS1TSEEzODRcblxuICAgIC0gRUNESEUtRUNEU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gRUNESEUtUlNBLUNIQUNIQTIwLVBPTFkxMzA1XG5cbiAgICAtIERIRS1SU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gREhFLVJTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gIG1pblRMU1ZlcnNpb246IFZlcnNpb25UTFMxMiIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoib2JqZWN0In0sIm1vZGVybiI6eyJkZXNjcmlwdGlvbiI6Im1vZGVybiBpcyBhIFRMUyBzZWN1cml0eSBwcm9maWxlIGJhc2VkIG9uOlxuXG5odHRwczovL3dpa2kubW96aWxsYS5vcmcvU2VjdXJpdHkvU2VydmVyX1NpZGVfVExTI01vZGVybl9jb21wYXRpYmlsaXR5XG5cbmFuZCBsb29rcyBsaWtlIHRoaXMgKHlhbWwpOlxuXG4gIGNpcGhlcnM6XG5cbiAgICAtIFRMU19BRVNfMTI4X0dDTV9TSEEyNTZcblxuICAgIC0gVExTX0FFU18yNTZfR0NNX1NIQTM4NFxuXG4gICAgLSBUTFNfQ0hBQ0hBMjBfUE9MWTEzMDVfU0hBMjU2XG5cbiAgbWluVExTVmVyc2lvbjogVmVyc2lvblRMUzEzIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJvYmplY3QifSwib2xkIjp7ImRlc2NyaXB0aW9uIjoib2xkIGlzIGEgVExTIHNlY3VyaXR5IHByb2ZpbGUgYmFzZWQgb246XG5cbmh0dHBzOi8vd2lraS5tb3ppbGxhLm9yZy9TZWN1cml0eS9TZXJ2ZXJfU2lkZV9UTFMjT2xkX2JhY2t3YXJkX2NvbXBhdGliaWxpdHlcblxuYW5kIGxvb2tzIGxpa2UgdGhpcyAoeWFtbCk6XG5cbiAgY2lwaGVyczpcblxuICAgIC0gVExTX0FFU18xMjhfR0NNX1NIQTI1NlxuXG4gICAgLSBUTFNfQUVTXzI1Nl9HQ01fU0hBMzg0XG5cbiAgICAtIFRMU19DSEFDSEEyMF9QT0xZMTMwNV9TSEEyNTZcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMTI4LUdDTS1TSEEyNTZcblxuICAgIC0gRUNESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIEVDREhFLVJTQS1BRVMyNTYtR0NNLVNIQTM4NFxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1DSEFDSEEyMC1QT0xZMTMwNVxuXG4gICAgLSBFQ0RIRS1SU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gREhFLVJTQS1BRVMxMjgtR0NNLVNIQTI1NlxuXG4gICAgLSBESEUtUlNBLUFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIERIRS1SU0EtQ0hBQ0hBMjAtUE9MWTEzMDVcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMTI4LVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMTI4LVNIQTI1NlxuXG4gICAgLSBFQ0RIRS1FQ0RTQS1BRVMxMjgtU0hBXG5cbiAgICAtIEVDREhFLVJTQS1BRVMxMjgtU0hBXG5cbiAgICAtIEVDREhFLUVDRFNBLUFFUzI1Ni1TSEEzODRcblxuICAgIC0gRUNESEUtUlNBLUFFUzI1Ni1TSEEzODRcblxuICAgIC0gRUNESEUtRUNEU0EtQUVTMjU2LVNIQVxuXG4gICAgLSBFQ0RIRS1SU0EtQUVTMjU2LVNIQVxuXG4gICAgLSBESEUtUlNBLUFFUzEyOC1TSEEyNTZcblxuICAgIC0gREhFLVJTQS1BRVMyNTYtU0hBMjU2XG5cbiAgICAtIEFFUzEyOC1HQ00tU0hBMjU2XG5cbiAgICAtIEFFUzI1Ni1HQ00tU0hBMzg0XG5cbiAgICAtIEFFUzEyOC1TSEEyNTZcblxuICAgIC0gQUVTMjU2LVNIQTI1NlxuXG4gICAgLSBBRVMxMjgtU0hBXG5cbiAgICAtIEFFUzI1Ni1TSEFcblxuICAgIC0gREVTLUNCQzMtU0hBXG5cbiAgbWluVExTVmVyc2lvbjogVmVyc2lvblRMUzEwIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJvYmplY3QifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgaXMgb25lIG9mIE9sZCwgSW50ZXJtZWRpYXRlLCBNb2Rlcm4gb3IgQ3VzdG9tLiBDdXN0b20gcHJvdmlkZXNcbnRoZSBhYmlsaXR5IHRvIHNwZWNpZnkgaW5kaXZpZHVhbCBUTFMgc2VjdXJpdHkgcHJvZmlsZSBwYXJhbWV0ZXJzLlxuT2xkLCBJbnRlcm1lZGlhdGUgYW5kIE1vZGVybiBhcmUgVExTIHNlY3VyaXR5IHByb2ZpbGVzIGJhc2VkIG9uOlxuXG5odHRwczovL3dpa2kubW96aWxsYS5vcmcvU2VjdXJpdHkvU2VydmVyX1NpZGVfVExTI1JlY29tbWVuZGVkX2NvbmZpZ3VyYXRpb25zXG5cblRoZSBwcm9maWxlcyBhcmUgaW50ZW50IGJhc2VkLCBzbyB0aGV5IG1heSBjaGFuZ2Ugb3ZlciB0aW1lIGFzIG5ldyBjaXBoZXJzIGFyZSBkZXZlbG9wZWQgYW5kIGV4aXN0aW5nIGNpcGhlcnNcbmFyZSBmb3VuZCB0byBiZSBpbnNlY3VyZS4gIERlcGVuZGluZyBvbiBwcmVjaXNlbHkgd2hpY2ggY2lwaGVycyBhcmUgYXZhaWxhYmxlIHRvIGEgcHJvY2VzcywgdGhlIGxpc3QgbWF5IGJlXG5yZWR1Y2VkLlxuXG5Ob3RlIHRoYXQgdGhlIE1vZGVybiBwcm9maWxlIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkIGJlY2F1c2UgaXQgaXMgbm90XG55ZXQgd2VsbCBhZG9wdGVkIGJ5IGNvbW1vbiBzb2Z0d2FyZSBsaWJyYXJpZXMuIiwiZW51bSI6WyJPbGQiLCJJbnRlcm1lZGlhdGUiLCJNb2Rlcm4iLCJDdXN0b20iXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ1c2VyRGF0YUNvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJVc2VyIGRhdGEgY29sbGVjdGlvbiBzd2l0Y2hlcyIsInByb3BlcnRpZXMiOnsiZmVlZGJhY2tEaXNhYmxlZCI6eyJ0eXBlIjoiYm9vbGVhbiJ9LCJ0cmFuc2NyaXB0c0Rpc2FibGVkIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJkZWZhdWx0TW9kZWwiLCJkZWZhdWx0UHJvdmlkZXIiXSwidHlwZSI6Im9iamVjdCJ9LCJvbHNEYXRhQ29sbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiT0xTRGF0YUNvbGxlY3RvclNwZWMgZGVmaW5lcyBhbGxvd2VkIE9MUyBkYXRhIGNvbGxlY3RvciBjb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsibG9nTGV2ZWwiOnsiZGVmYXVsdCI6IklORk8iLCJkZXNjcmlwdGlvbiI6IkxvZyBsZXZlbC4gVmFsaWQgb3B0aW9ucyBhcmUgREVCVUcsIElORk8sIFdBUk5JTkcsIEVSUk9SIGFuZCBDUklUSUNBTC4gRGVmYXVsdDogXCJJTkZPXCIuIiwiZW51bSI6WyJERUJVRyIsIklORk8iLCJXQVJOSU5HIiwiRVJST1IiLCJDUklUSUNBTCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJsbG0iLCJvbHMiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJPTFNDb25maWdTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgT0xTIGRlcGxveW1lbnQuIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7Iml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci5cblRoaXMgc2hvdWxkIGJlIHdoZW4gdGhlIHVuZGVybHlpbmcgY29uZGl0aW9uIGNoYW5nZWQuICBJZiB0aGF0IGlzIG5vdCBrbm93biwgdGhlbiB1c2luZyB0aGUgdGltZSB3aGVuIHRoZSBBUEkgZmllbGQgY2hhbmdlZCBpcyBhY2NlcHRhYmxlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB0aGUgdHJhbnNpdGlvbi5cblRoaXMgbWF5IGJlIGFuIGVtcHR5IHN0cmluZy4iLCJtYXhMZW5ndGgiOjMyNzY4LCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiByZXByZXNlbnRzIHRoZSAubWV0YWRhdGEuZ2VuZXJhdGlvbiB0aGF0IHRoZSBjb25kaXRpb24gd2FzIHNldCBiYXNlZCB1cG9uLlxuRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGUgLnN0YXR1cy5jb25kaXRpb25zW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlXG53aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGluc3RhbmNlLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGNvbnRhaW5zIGEgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgaW5kaWNhdGluZyB0aGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLlxuUHJvZHVjZXJzIG9mIHNwZWNpZmljIGNvbmRpdGlvbiB0eXBlcyBtYXkgZGVmaW5lIGV4cGVjdGVkIHZhbHVlcyBhbmQgbWVhbmluZ3MgZm9yIHRoaXMgZmllbGQsXG5hbmQgd2hldGhlciB0aGUgdmFsdWVzIGFyZSBjb25zaWRlcmVkIGEgZ3VhcmFudGVlZCBBUEkuXG5UaGUgdmFsdWUgc2hvdWxkIGJlIGEgQ2FtZWxDYXNlIHN0cmluZy5cblRoaXMgZmllbGQgbWF5IG5vdCBiZSBlbXB0eS4iLCJtYXhMZW5ndGgiOjEwMjQsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bQS1aYS16XShbQS1aYS16MC05Xyw6XSpbQS1aYS16MC05X10pPyQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwiZW51bSI6WyJUcnVlIiwiRmFsc2UiLCJVbmtub3duIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgY29uZGl0aW9uIGluIENhbWVsQ2FzZSBvciBpbiBmb28uZXhhbXBsZS5jb20vQ2FtZWxDYXNlLiIsIm1heExlbmd0aCI6MzE2LCJwYXR0ZXJuIjoiXihbYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPyhcXC5bYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPykqLyk/KChbQS1aYS16MC05XVstQS1aYS16MC05Xy5dKik/W0EtWmEtejAtOV0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJjb25kaXRpb25zIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy12YWxpZGF0aW9ucyI6W3sibWVzc2FnZSI6Ii5tZXRhZGF0YS5uYW1lIG11c3QgYmUgJ2NsdXN0ZXInIiwicnVsZSI6InNlbGYubWV0YWRhdGEubmFtZSA9PSAnY2x1c3RlcicifV19fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoibWV0cmljcyIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjbHVzdGVycm9sZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLW9scy1tZXRyaWNzLXJlYWRlciJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9vbHMtbWV0cmljcy1hY2Nlc3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoidXNlci1hY2Nlc3MiLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoicXVlcnktYWNjZXNzIiwiYXBwLmt1YmVybmV0ZXMuaW8vbWFuYWdlZC1ieSI6Imt1c3RvbWl6ZSIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJjbHVzdGVycm9sZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLXF1ZXJ5LWFjY2VzcyJ9LCJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9vbHMtYWNjZXNzIl0sInZlcmJzIjpbImdldCJdfV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZUJpbmRpbmciLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Im1ldHJpY3MiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoiY2x1c3RlcnJvbGViaW5kaW5nIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImxpZ2h0c3BlZWQtb3BlcmF0b3IifSwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3Itb2xzLW1ldHJpY3MtcmVhZGVyIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3Itb2xzLW1ldHJpY3MtcmVhZGVyIn0sInN1YmplY3RzIjpbeyJraW5kIjoiU2VydmljZUFjY291bnQiLCJuYW1lIjoibGlnaHRzcGVlZC1vcGVyYXRvci1tZXRyaWNzLXJlYWRlciIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1saWdodHNwZWVkIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJtZXRyaWNzIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InJvbGUiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibGlnaHRzcGVlZC1vcGVyYXRvciJ9LCJuYW1lIjoibGlnaHRzcGVlZC1vcGVyYXRvci1wcm9tZXRoZXVzLW9wZXJhdG9yIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlTmFtZXMiOlsibWV0cmljcy1yZWFkZXItdG9rZW4iXSwicmVzb3VyY2VzIjpbInNlY3JldHMiXSwidmVyYnMiOlsiZ2V0Iiwid2F0Y2giLCJsaXN0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJtZXRyaWNzIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InJvbGUiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibGlnaHRzcGVlZC1vcGVyYXRvciJ9LCJuYW1lIjoibGlnaHRzcGVlZC1vcGVyYXRvci1wcm9tZXRoZXVzLWs4cyJ9LCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VydmljZXMiLCJlbmRwb2ludHMiLCJwb2RzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJleHRlbnNpb25zIl0sInJlc291cmNlcyI6WyJpbmdyZXNzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm5ldHdvcmtpbmcuazhzLmlvIl0sInJlc291cmNlcyI6WyJpbmdyZXNzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoibWV0cmljcyIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJyb2xlYmluZGluZyIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLXByb21ldGhldXMtazhzIn0sInJvbGVSZWYiOnsiYXBpR3JvdXAiOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIiwia2luZCI6IlJvbGUiLCJuYW1lIjoibGlnaHRzcGVlZC1vcGVyYXRvci1wcm9tZXRoZXVzLWs4cyJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50IjoibWV0cmljcyIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJyb2xlYmluZGluZyIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJsaWdodHNwZWVkLW9wZXJhdG9yIn0sIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLXByb21ldGhldXMtb3BlcmF0b3IifSwicm9sZVJlZiI6eyJhcGlHcm91cCI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iLCJraW5kIjoiUm9sZSIsIm5hbWUiOiJsaWdodHNwZWVkLW9wZXJhdG9yLXByb21ldGhldXMtb3BlcmF0b3IifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLW9wZXJhdG9yIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Im1hbmFnZXIiLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiY29udHJvbGxlci1tYW5hZ2VyLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibGlnaHRzcGVlZC1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Im1ldHJpY3MiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJtZXRyaWNzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6Im1ldHJpY3MiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZS1hY2NvdW50IiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImxpZ2h0c3BlZWQtb3BlcmF0b3IifSwibmFtZSI6ImxpZ2h0c3BlZWQtb3BlcmF0b3ItbWV0cmljcy1yZWFkZXIifX0=
relatedImages:
  - name: lightspeed-service-api
    image: registry.redhat.io/openshift-lightspeed/lightspeed-service-api-rhel9@sha256:ec359967a87bc7ee2c1d6a61e553acbdb0dc85d6f240a1865bf57d3ba5dc7193
  - name: lightspeed-console-plugin
    image: registry.redhat.io/openshift-lightspeed/lightspeed-console-plugin-rhel9@sha256:dfc42c2651ac8793f61ff0e54334ecb006dc4a77487bc7c6878cdf47bd4ac080
  - name: lightspeed-operator
    image: registry.redhat.io/openshift-lightspeed/lightspeed-rhel9-operator@sha256:b12803642df4d9b3ad0cf800315021483f543c6a8827b3901e57bdb65f10dc48
  - name: openshift-mcp-server
    image: registry.redhat.io/openshift-lightspeed/openshift-mcp-server-rhel9@sha256:f1e4521ff2cc076f361c04d8c9aeac09ffcedb89a2f1dbe71f85caa27472adab
  - name: lightspeed-postgresql
    image: registry.redhat.io/rhel9/postgresql-16@sha256:6d2cab6cb6366b26fcf4591fe22aa5e8212a3836c34c896bb65977a8e50d658b
  - name: lightspeed-operator-bundle
    image: registry.redhat.io/openshift-lightspeed/lightspeed-operator-bundle@sha256:78627f5bed3fa4fc207439a6144cb28c7d8493119394ad2a75382473418a70ac
schema: olm.bundle
---
schema: olm.channel
package: lightspeed-operator
name: stable
entries:
  - name: lightspeed-operator.v1.0.5
    skipRange: ">=0.1.0 <1.0.5"
---
schema: olm.channel
package: lightspeed-operator
name: alpha
entries:
  - name: lightspeed-operator.v1.0.5
    skipRange: ">=0.1.0 <1.0.5"
