apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: update-catalog
spec:
  params:
    - name: snapshot
      type: string
      description: The bundle snapshot to update the catalog with. Provided by Konflux.
    - name: release
      type: string
      description: The release name and namespace in the format of <namespace>/<release-name>. Provided by Konflux.
    - name: releasePlan
      type: string
      description: The release plan name, which is not used in this pipeline. Provided by Konflux.
    - name: forkGitUrl
      type: string
      description: The git repository URL where the updated catalog is committed to
      default: "https://github.com/raptorsun/lightspeed-operator.git"
    - name: forkBranch
      type: string
      description: The branch of the git repository where the updated catalog is committed to
      default: "fbc-update"
    - name: forkUser
      type: string
      description: The Github user of the fork git repository
      default: "raptorsun"
    - name: sourceGitUrl
      type: string
      description: The source git repository URL to clone as starting point for the catalog update
      default: "https://github.com/openshift/lightspeed-operator.git"
    - name: sourceBranch
      type: string
      description: The branch of the source git repository to clone as starting point for the catalog update
      default: "main"

  tasks:
    - name: update-catalog
      taskSpec:
        params:
          - name: snapshot
            type: string
            description: The bundle snapshot to update the catalog with
          - name: release
            type: string
            description: The release name and namespace in the format of <namespace>/<release-name>
          - name: forkGitUrl
            type: string
            description: The git repository URL where the updated catalog is committed to
            default: "https://github.com/raptorsun/lightspeed-operator.git"
          - name: forkBranch
            type: string
            description: The branch of the git repository where the updated catalog is committed to
            default: "fbc-update"
          - name: forkUser
            type: string
            description: The user of the fork git repository, which is not used in this pipeline
            default: "raptorsun"
          - name: sourceGitUrl
            type: string
            description: The source git repository URL to clone as starting point for the catalog update
            default: "https://github.com/openshift/lightspeed-operator.git"
          - name: sourceBranch
            type: string
            description: The branch of the source git repository to clone as starting point for the catalog update
            default: "main"
        steps:
          - name: check-release-status
            image: quay.io/hasun/catalog-update:0.0.1
            script: |
              set -e
              oc login --token=${KONFLUX_TOKEN} --server=https://api.stone-prd-rh01.pg1f.p1.openshiftapps.com:6443
              IFS='/' read -r RELEASE_NAMESPACE RELEASE_NAME <<< "$(params.release)"
              RELEASECONDITIONS=$(kubectl get release "$RELEASE_NAME" -n "$RELEASE_NAMESPACE" \
              -o jsonpath='{.status.conditions}' | jq '.[] | select(.type == "ManagedPipelineProcessed")')
              RELEASESTATUS=$(jq -r '.reason' <<< "$RELEASECONDITIONS")
              if [[ "$RELEASESTATUS" == *"Failed"* ]]; then
                echo "Release failed, skipping catalog update"
                exit 1
              fi
            env:
              - name: KONFLUX_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: release-bot-konflux-token
                    key: konflux-token
              - name: HOME
                value: /workspace
          - name: git-clone
            image: quay.io/hasun/catalog-update:0.0.1
            script: |
              git clone --single-branch --branch $(params.sourceBranch) $(params.sourceGitUrl) repo
              cd repo
              git checkout -b $(params.forkBranch)
            workingDir: /workspace
          - name: update-catalog
            image: quay.io/hasun/catalog-update:0.0.1
            script: |
              set -e
              oc login --token=${KONFLUX_TOKEN} --server=https://api.stone-prd-rh01.pg1f.p1.openshiftapps.com:6443
              IFS='/' read -r SNAPSHOT_NAMESPACE SNAPSHOT_NAME <<< "$(params.snapshot)"

              cd repo
              ./hack/bundle_to_catalog.sh -b ${SNAPSHOT_NAME} -n stable,alpha -c lightspeed-catalog-4.16/index.yaml
              ./hack/bundle_to_catalog.sh -b ${SNAPSHOT_NAME} -n stable,alpha -c lightspeed-catalog-4.17/index.yaml -m
              ./hack/bundle_to_catalog.sh -b ${SNAPSHOT_NAME} -n stable,alpha -c lightspeed-catalog-4.18/index.yaml -m
              ./hack/bundle_to_catalog.sh -b ${SNAPSHOT_NAME} -n stable,alpha -c lightspeed-catalog-4.19/index.yaml -m
              ./hack/bundle_to_catalog.sh -b ${SNAPSHOT_NAME} -n stable,alpha -c lightspeed-catalog-4.20/index.yaml -m

            workingDir: /workspace
            env:
              - name: KONFLUX_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: release-bot-konflux-token
                    key: konflux-token
              - name: HOME
                value: /workspace
          - name: git-config
            image: quay.io/hasun/catalog-update:0.0.1
            script: |
              set -e
              cd repo
              # todo: replace the email and name with the bot's email and name
              git config user.email "hasun@redhat.com"
              git config user.name "Haoyu Sun's Bot"
              git remote add fork $(params.forkGitUrl)
            workingDir: /workspace
          - name: git-commit-push
            image: quay.io/hasun/catalog-update:0.0.1
            workingDir: /workspace
            env:
              - name: GITHUB_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: release-bot-github-token
                    key: github-token
            script: |
              set -e
              cd repo
              git add lightspeed-catalog-4.16/index.yaml lightspeed-catalog-4.17/index.yaml \
                lightspeed-catalog-4.18/index.yaml lightspeed-catalog-4.19/index.yaml lightspeed-catalog-4.20/index.yaml
              git add related_images.json
              git commit -m "Update catalog with bundle snapshot $(params.snapshot)"
              git config credential.helper '!f() { sleep 1; echo "username=git"; echo "password=$GITHUB_TOKEN"; }; f'
              git rev-parse HEAD | tee $(results.commit-id.path)
              git push --force fork $(params.forkBranch)
              RESPONSE=$(curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/openshift/lightspeed-operator/pulls \
                -d '{"title":"Catalog Update from Bundle Snapshot $(params.snapshot)","body":"This PR is triggered by the release $(params.release).","head":"$(params.forkUser):$(params.forkBranch)","base":"$(params.sourceBranch)"}' )
              echo "Github response: \n $RESPONSE"
              jq -r '.html_url' <<< $RESPONSE | tee $(results.pull-request-url.path)
        results:
          - name: commit-id
            description: The commit ID where bundle is updated
          - name: pull-request-url
            description: The URL of the created pull request
      params:
        - name: release
          value: $(params.release)
        - name: snapshot
          value: $(params.snapshot)
        - name: forkGitUrl
          value: $(params.forkGitUrl)
        - name: forkBranch
          value: $(params.forkBranch)
        - name: forkUser
          value: $(params.forkUser)
        - name: sourceGitUrl
          value: $(params.sourceGitUrl)
        - name: sourceBranch
          value: $(params.sourceBranch)
        - name: releasePlan
          value: $(params.releasePlan)
  results:
    - name: commit-id
      description: The commit ID where bundle is updated
      value: "$(tasks.update-catalog.results.commit-id)"
    - name: pull-request-url
      description: The URL of the created pull request
      value: "$(tasks.update-catalog.results.pull-request-url)"
